'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8762
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS001"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS001
    Inherits Global.System.Data.DataSet
    
    Private tableBUDGET_DATA As BUDGET_DATADataTable
    
    Private tableREVISE_BUDGET As REVISE_BUDGETDataTable
    
    Private tableESTIMATE_BUDGET As ESTIMATE_BUDGETDataTable
    
    Private tableBG_M_SETTINGS As BG_M_SETTINGSDataTable
    
    Private tableMTP_BUDGET As MTP_BUDGETDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("BUDGET_DATA")) Is Nothing) Then
                MyBase.Tables.Add(New BUDGET_DATADataTable(ds.Tables("BUDGET_DATA")))
            End If
            If (Not (ds.Tables("REVISE_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New REVISE_BUDGETDataTable(ds.Tables("REVISE_BUDGET")))
            End If
            If (Not (ds.Tables("ESTIMATE_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New ESTIMATE_BUDGETDataTable(ds.Tables("ESTIMATE_BUDGET")))
            End If
            If (Not (ds.Tables("BG_M_SETTINGS")) Is Nothing) Then
                MyBase.Tables.Add(New BG_M_SETTINGSDataTable(ds.Tables("BG_M_SETTINGS")))
            End If
            If (Not (ds.Tables("MTP_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New MTP_BUDGETDataTable(ds.Tables("MTP_BUDGET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BUDGET_DATA() As BUDGET_DATADataTable
        Get
            Return Me.tableBUDGET_DATA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REVISE_BUDGET() As REVISE_BUDGETDataTable
        Get
            Return Me.tableREVISE_BUDGET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ESTIMATE_BUDGET() As ESTIMATE_BUDGETDataTable
        Get
            Return Me.tableESTIMATE_BUDGET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BG_M_SETTINGS() As BG_M_SETTINGSDataTable
        Get
            Return Me.tableBG_M_SETTINGS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MTP_BUDGET() As MTP_BUDGETDataTable
        Get
            Return Me.tableMTP_BUDGET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS001 = CType(MyBase.Clone,DS001)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("BUDGET_DATA")) Is Nothing) Then
                MyBase.Tables.Add(New BUDGET_DATADataTable(ds.Tables("BUDGET_DATA")))
            End If
            If (Not (ds.Tables("REVISE_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New REVISE_BUDGETDataTable(ds.Tables("REVISE_BUDGET")))
            End If
            If (Not (ds.Tables("ESTIMATE_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New ESTIMATE_BUDGETDataTable(ds.Tables("ESTIMATE_BUDGET")))
            End If
            If (Not (ds.Tables("BG_M_SETTINGS")) Is Nothing) Then
                MyBase.Tables.Add(New BG_M_SETTINGSDataTable(ds.Tables("BG_M_SETTINGS")))
            End If
            If (Not (ds.Tables("MTP_BUDGET")) Is Nothing) Then
                MyBase.Tables.Add(New MTP_BUDGETDataTable(ds.Tables("MTP_BUDGET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableBUDGET_DATA = CType(MyBase.Tables("BUDGET_DATA"),BUDGET_DATADataTable)
        If (initTable = true) Then
            If (Not (Me.tableBUDGET_DATA) Is Nothing) Then
                Me.tableBUDGET_DATA.InitVars
            End If
        End If
        Me.tableREVISE_BUDGET = CType(MyBase.Tables("REVISE_BUDGET"),REVISE_BUDGETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREVISE_BUDGET) Is Nothing) Then
                Me.tableREVISE_BUDGET.InitVars
            End If
        End If
        Me.tableESTIMATE_BUDGET = CType(MyBase.Tables("ESTIMATE_BUDGET"),ESTIMATE_BUDGETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableESTIMATE_BUDGET) Is Nothing) Then
                Me.tableESTIMATE_BUDGET.InitVars
            End If
        End If
        Me.tableBG_M_SETTINGS = CType(MyBase.Tables("BG_M_SETTINGS"),BG_M_SETTINGSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBG_M_SETTINGS) Is Nothing) Then
                Me.tableBG_M_SETTINGS.InitVars
            End If
        End If
        Me.tableMTP_BUDGET = CType(MyBase.Tables("MTP_BUDGET"),MTP_BUDGETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMTP_BUDGET) Is Nothing) Then
                Me.tableMTP_BUDGET.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DS001"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS001.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableBUDGET_DATA = New BUDGET_DATADataTable
        MyBase.Tables.Add(Me.tableBUDGET_DATA)
        Me.tableREVISE_BUDGET = New REVISE_BUDGETDataTable
        MyBase.Tables.Add(Me.tableREVISE_BUDGET)
        Me.tableESTIMATE_BUDGET = New ESTIMATE_BUDGETDataTable
        MyBase.Tables.Add(Me.tableESTIMATE_BUDGET)
        Me.tableBG_M_SETTINGS = New BG_M_SETTINGSDataTable
        MyBase.Tables.Add(Me.tableBG_M_SETTINGS)
        Me.tableMTP_BUDGET = New MTP_BUDGETDataTable
        MyBase.Tables.Add(Me.tableMTP_BUDGET)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeBUDGET_DATA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREVISE_BUDGET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeESTIMATE_BUDGET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeBG_M_SETTINGS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMTP_BUDGET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS001 = New DS001
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub BUDGET_DATARowChangeEventHandler(ByVal sender As Object, ByVal e As BUDGET_DATARowChangeEvent)
    
    Public Delegate Sub REVISE_BUDGETRowChangeEventHandler(ByVal sender As Object, ByVal e As REVISE_BUDGETRowChangeEvent)
    
    Public Delegate Sub ESTIMATE_BUDGETRowChangeEventHandler(ByVal sender As Object, ByVal e As ESTIMATE_BUDGETRowChangeEvent)
    
    Public Delegate Sub BG_M_SETTINGSRowChangeEventHandler(ByVal sender As Object, ByVal e As BG_M_SETTINGSRowChangeEvent)
    
    Public Delegate Sub MTP_BUDGETRowChangeEventHandler(ByVal sender As Object, ByVal e As MTP_BUDGETRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BUDGET_DATADataTable
        Inherits Global.System.Data.TypedTableBase(Of BUDGET_DATARow)
        
        Private columnBUDGET_ORDER_NO As Global.System.Data.DataColumn
        
        Private columnBUDGET_ORDER_NAME As Global.System.Data.DataColumn
        
        Private columnDEPT_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NAME As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnM1 As Global.System.Data.DataColumn
        
        Private columnM2 As Global.System.Data.DataColumn
        
        Private columnM3 As Global.System.Data.DataColumn
        
        Private columnM4 As Global.System.Data.DataColumn
        
        Private columnM5 As Global.System.Data.DataColumn
        
        Private columnM6 As Global.System.Data.DataColumn
        
        Private columnFIRST_HALF_SUM As Global.System.Data.DataColumn
        
        Private columnSECOND_HALF_SUM As Global.System.Data.DataColumn
        
        Private columnYEAR_SUM As Global.System.Data.DataColumn
        
        Private columnLAST_YEAR_SUM As Global.System.Data.DataColumn
        
        Private columnDIFF_YEAR As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM2_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM2_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM3_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM3_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM4_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM4_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM5_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM5_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM6_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM6_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnFIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnFIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnSECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnSECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnYEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnYEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnLAST_YEAR_SUM_FIXCOST As Global.System.Data.DataColumn
        
        Private columnLAST_YEAR_SUM_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFF_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnCOST_TYPE As Global.System.Data.DataColumn
        
        Private columnMTP_RRT1 As Global.System.Data.DataColumn
        
        Private columnMTP_RRT1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnMTP_RRT1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_MTP As Global.System.Data.DataColumn
        
        Private columnDIFF_MTP_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_MTP_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM7 As Global.System.Data.DataColumn
        
        Private columnM8 As Global.System.Data.DataColumn
        
        Private columnM9 As Global.System.Data.DataColumn
        
        Private columnM10 As Global.System.Data.DataColumn
        
        Private columnM11 As Global.System.Data.DataColumn
        
        Private columnM12 As Global.System.Data.DataColumn
        
        Private columnM7_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM7_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM8_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM8_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM9_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM9_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM10_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM10_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM11_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM11_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM12_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM12_VARIABLECOST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BUDGET_DATA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FIRST_HALF_SUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST_HALF_SUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SECOND_HALF_SUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECOND_HALF_SUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YEAR_SUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR_SUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LAST_YEAR_SUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_YEAR_SUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LAST_YEAR_SUM_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_YEAR_SUM_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LAST_YEAR_SUM_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_YEAR_SUM_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COST_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOST_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MTP_RRT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTP_RRT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MTP_RRT1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTP_RRT1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MTP_RRT1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTP_RRT1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_MTPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_MTP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_MTP_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_MTP_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_MTP_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_MTP_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BUDGET_DATARow
            Get
                Return CType(Me.Rows(index),BUDGET_DATARow)
            End Get
        End Property
        
        Public Event BUDGET_DATARowChanging As BUDGET_DATARowChangeEventHandler
        
        Public Event BUDGET_DATARowChanged As BUDGET_DATARowChangeEventHandler
        
        Public Event BUDGET_DATARowDeleting As BUDGET_DATARowChangeEventHandler
        
        Public Event BUDGET_DATARowDeleted As BUDGET_DATARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddBUDGET_DATARow(ByVal row As BUDGET_DATARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddBUDGET_DATARow( _
                    ByVal BUDGET_ORDER_NO As String,  _
                    ByVal BUDGET_ORDER_NAME As String,  _
                    ByVal DEPT_NO As String,  _
                    ByVal PERSON_IN_CHARGE As String,  _
                    ByVal PERSON_IN_CHARGE_NAME As String,  _
                    ByVal ACTUAL_FIRST_HALF As Double,  _
                    ByVal REVISE_SECOND_HALF As Double,  _
                    ByVal M1 As Double,  _
                    ByVal M2 As Double,  _
                    ByVal M3 As Double,  _
                    ByVal M4 As Double,  _
                    ByVal M5 As Double,  _
                    ByVal M6 As Double,  _
                    ByVal FIRST_HALF_SUM As Double,  _
                    ByVal SECOND_HALF_SUM As Double,  _
                    ByVal YEAR_SUM As Double,  _
                    ByVal LAST_YEAR_SUM As Double,  _
                    ByVal DIFF_YEAR As Double,  _
                    ByVal ACTUAL_FIRST_HALF_FIXCOST As Double,  _
                    ByVal ACTUAL_FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal REVISE_SECOND_HALF_FIXCOST As Double,  _
                    ByVal REVISE_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal M1_FIXCOST As Double,  _
                    ByVal M1_VARIABLECOST As Double,  _
                    ByVal M2_FIXCOST As Double,  _
                    ByVal M2_VARIABLECOST As Double,  _
                    ByVal M3_FIXCOST As Double,  _
                    ByVal M3_VARIABLECOST As Double,  _
                    ByVal M4_FIXCOST As Double,  _
                    ByVal M4_VARIABLECOST As Double,  _
                    ByVal M5_FIXCOST As Double,  _
                    ByVal M5_VARIABLECOST As Double,  _
                    ByVal M6_FIXCOST As Double,  _
                    ByVal M6_VARIABLECOST As Double,  _
                    ByVal FIRST_HALF_FIXCOST As Double,  _
                    ByVal FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal SECOND_HALF_FIXCOST As Double,  _
                    ByVal SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal YEAR_FIXCOST As Double,  _
                    ByVal YEAR_VARIABLECOST As Double,  _
                    ByVal LAST_YEAR_SUM_FIXCOST As Double,  _
                    ByVal LAST_YEAR_SUM_VARIABLECOST As Double,  _
                    ByVal DIFF_YEAR_FIXCOST As Double,  _
                    ByVal DIFF_YEAR_VARIABLECOST As Double,  _
                    ByVal COST_TYPE As Byte,  _
                    ByVal MTP_RRT1 As Double,  _
                    ByVal MTP_RRT1_VARIABLECOST As Double,  _
                    ByVal MTP_RRT1_FIXCOST As Double,  _
                    ByVal DIFF_MTP As Double,  _
                    ByVal DIFF_MTP_FIXCOST As Double,  _
                    ByVal DIFF_MTP_VARIABLECOST As Double,  _
                    ByVal M7 As Double,  _
                    ByVal M8 As Double,  _
                    ByVal M9 As Double,  _
                    ByVal M10 As Double,  _
                    ByVal M11 As Double,  _
                    ByVal M12 As Double,  _
                    ByVal M7_FIXCOST As Double,  _
                    ByVal M7_VARIABLECOST As Double,  _
                    ByVal M8_FIXCOST As Double,  _
                    ByVal M8_VARIABLECOST As Double,  _
                    ByVal M9_FIXCOST As Double,  _
                    ByVal M9_VARIABLECOST As Double,  _
                    ByVal M10_FIXCOST As Double,  _
                    ByVal M10_VARIABLECOST As Double,  _
                    ByVal M11_FIXCOST As Double,  _
                    ByVal M11_VARIABLECOST As Double,  _
                    ByVal M12_FIXCOST As Double,  _
                    ByVal M12_VARIABLECOST As Double) As BUDGET_DATARow
            Dim rowBUDGET_DATARow As BUDGET_DATARow = CType(Me.NewRow,BUDGET_DATARow)
            Dim columnValuesArray() As Object = New Object() {BUDGET_ORDER_NO, BUDGET_ORDER_NAME, DEPT_NO, PERSON_IN_CHARGE, PERSON_IN_CHARGE_NAME, ACTUAL_FIRST_HALF, REVISE_SECOND_HALF, M1, M2, M3, M4, M5, M6, FIRST_HALF_SUM, SECOND_HALF_SUM, YEAR_SUM, LAST_YEAR_SUM, DIFF_YEAR, ACTUAL_FIRST_HALF_FIXCOST, ACTUAL_FIRST_HALF_VARIABLECOST, REVISE_SECOND_HALF_FIXCOST, REVISE_SECOND_HALF_VARIABLECOST, M1_FIXCOST, M1_VARIABLECOST, M2_FIXCOST, M2_VARIABLECOST, M3_FIXCOST, M3_VARIABLECOST, M4_FIXCOST, M4_VARIABLECOST, M5_FIXCOST, M5_VARIABLECOST, M6_FIXCOST, M6_VARIABLECOST, FIRST_HALF_FIXCOST, FIRST_HALF_VARIABLECOST, SECOND_HALF_FIXCOST, SECOND_HALF_VARIABLECOST, YEAR_FIXCOST, YEAR_VARIABLECOST, LAST_YEAR_SUM_FIXCOST, LAST_YEAR_SUM_VARIABLECOST, DIFF_YEAR_FIXCOST, DIFF_YEAR_VARIABLECOST, COST_TYPE, MTP_RRT1, MTP_RRT1_VARIABLECOST, MTP_RRT1_FIXCOST, DIFF_MTP, DIFF_MTP_FIXCOST, DIFF_MTP_VARIABLECOST, M7, M8, M9, M10, M11, M12, M7_FIXCOST, M7_VARIABLECOST, M8_FIXCOST, M8_VARIABLECOST, M9_FIXCOST, M9_VARIABLECOST, M10_FIXCOST, M10_VARIABLECOST, M11_FIXCOST, M11_VARIABLECOST, M12_FIXCOST, M12_VARIABLECOST}
            rowBUDGET_DATARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBUDGET_DATARow)
            Return rowBUDGET_DATARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BUDGET_DATADataTable = CType(MyBase.Clone,BUDGET_DATADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BUDGET_DATADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBUDGET_ORDER_NO = MyBase.Columns("BUDGET_ORDER_NO")
            Me.columnBUDGET_ORDER_NAME = MyBase.Columns("BUDGET_ORDER_NAME")
            Me.columnDEPT_NO = MyBase.Columns("DEPT_NO")
            Me.columnPERSON_IN_CHARGE = MyBase.Columns("PERSON_IN_CHARGE")
            Me.columnPERSON_IN_CHARGE_NAME = MyBase.Columns("PERSON_IN_CHARGE_NAME")
            Me.columnACTUAL_FIRST_HALF = MyBase.Columns("ACTUAL_FIRST_HALF")
            Me.columnREVISE_SECOND_HALF = MyBase.Columns("REVISE_SECOND_HALF")
            Me.columnM1 = MyBase.Columns("M1")
            Me.columnM2 = MyBase.Columns("M2")
            Me.columnM3 = MyBase.Columns("M3")
            Me.columnM4 = MyBase.Columns("M4")
            Me.columnM5 = MyBase.Columns("M5")
            Me.columnM6 = MyBase.Columns("M6")
            Me.columnFIRST_HALF_SUM = MyBase.Columns("FIRST_HALF_SUM")
            Me.columnSECOND_HALF_SUM = MyBase.Columns("SECOND_HALF_SUM")
            Me.columnYEAR_SUM = MyBase.Columns("YEAR_SUM")
            Me.columnLAST_YEAR_SUM = MyBase.Columns("LAST_YEAR_SUM")
            Me.columnDIFF_YEAR = MyBase.Columns("DIFF_YEAR")
            Me.columnACTUAL_FIRST_HALF_FIXCOST = MyBase.Columns("ACTUAL_FIRST_HALF_FIXCOST")
            Me.columnACTUAL_FIRST_HALF_VARIABLECOST = MyBase.Columns("ACTUAL_FIRST_HALF_VARIABLECOST")
            Me.columnREVISE_SECOND_HALF_FIXCOST = MyBase.Columns("REVISE_SECOND_HALF_FIXCOST")
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = MyBase.Columns("REVISE_SECOND_HALF_VARIABLECOST")
            Me.columnM1_FIXCOST = MyBase.Columns("M1_FIXCOST")
            Me.columnM1_VARIABLECOST = MyBase.Columns("M1_VARIABLECOST")
            Me.columnM2_FIXCOST = MyBase.Columns("M2_FIXCOST")
            Me.columnM2_VARIABLECOST = MyBase.Columns("M2_VARIABLECOST")
            Me.columnM3_FIXCOST = MyBase.Columns("M3_FIXCOST")
            Me.columnM3_VARIABLECOST = MyBase.Columns("M3_VARIABLECOST")
            Me.columnM4_FIXCOST = MyBase.Columns("M4_FIXCOST")
            Me.columnM4_VARIABLECOST = MyBase.Columns("M4_VARIABLECOST")
            Me.columnM5_FIXCOST = MyBase.Columns("M5_FIXCOST")
            Me.columnM5_VARIABLECOST = MyBase.Columns("M5_VARIABLECOST")
            Me.columnM6_FIXCOST = MyBase.Columns("M6_FIXCOST")
            Me.columnM6_VARIABLECOST = MyBase.Columns("M6_VARIABLECOST")
            Me.columnFIRST_HALF_FIXCOST = MyBase.Columns("FIRST_HALF_FIXCOST")
            Me.columnFIRST_HALF_VARIABLECOST = MyBase.Columns("FIRST_HALF_VARIABLECOST")
            Me.columnSECOND_HALF_FIXCOST = MyBase.Columns("SECOND_HALF_FIXCOST")
            Me.columnSECOND_HALF_VARIABLECOST = MyBase.Columns("SECOND_HALF_VARIABLECOST")
            Me.columnYEAR_FIXCOST = MyBase.Columns("YEAR_FIXCOST")
            Me.columnYEAR_VARIABLECOST = MyBase.Columns("YEAR_VARIABLECOST")
            Me.columnLAST_YEAR_SUM_FIXCOST = MyBase.Columns("LAST_YEAR_SUM_FIXCOST")
            Me.columnLAST_YEAR_SUM_VARIABLECOST = MyBase.Columns("LAST_YEAR_SUM_VARIABLECOST")
            Me.columnDIFF_YEAR_FIXCOST = MyBase.Columns("DIFF_YEAR_FIXCOST")
            Me.columnDIFF_YEAR_VARIABLECOST = MyBase.Columns("DIFF_YEAR_VARIABLECOST")
            Me.columnCOST_TYPE = MyBase.Columns("COST_TYPE")
            Me.columnMTP_RRT1 = MyBase.Columns("MTP_RRT1")
            Me.columnMTP_RRT1_VARIABLECOST = MyBase.Columns("MTP_RRT1_VARIABLECOST")
            Me.columnMTP_RRT1_FIXCOST = MyBase.Columns("MTP_RRT1_FIXCOST")
            Me.columnDIFF_MTP = MyBase.Columns("DIFF_MTP")
            Me.columnDIFF_MTP_FIXCOST = MyBase.Columns("DIFF_MTP_FIXCOST")
            Me.columnDIFF_MTP_VARIABLECOST = MyBase.Columns("DIFF_MTP_VARIABLECOST")
            Me.columnM7 = MyBase.Columns("M7")
            Me.columnM8 = MyBase.Columns("M8")
            Me.columnM9 = MyBase.Columns("M9")
            Me.columnM10 = MyBase.Columns("M10")
            Me.columnM11 = MyBase.Columns("M11")
            Me.columnM12 = MyBase.Columns("M12")
            Me.columnM7_FIXCOST = MyBase.Columns("M7_FIXCOST")
            Me.columnM7_VARIABLECOST = MyBase.Columns("M7_VARIABLECOST")
            Me.columnM8_FIXCOST = MyBase.Columns("M8_FIXCOST")
            Me.columnM8_VARIABLECOST = MyBase.Columns("M8_VARIABLECOST")
            Me.columnM9_FIXCOST = MyBase.Columns("M9_FIXCOST")
            Me.columnM9_VARIABLECOST = MyBase.Columns("M9_VARIABLECOST")
            Me.columnM10_FIXCOST = MyBase.Columns("M10_FIXCOST")
            Me.columnM10_VARIABLECOST = MyBase.Columns("M10_VARIABLECOST")
            Me.columnM11_FIXCOST = MyBase.Columns("M11_FIXCOST")
            Me.columnM11_VARIABLECOST = MyBase.Columns("M11_VARIABLECOST")
            Me.columnM12_FIXCOST = MyBase.Columns("M12_FIXCOST")
            Me.columnM12_VARIABLECOST = MyBase.Columns("M12_VARIABLECOST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBUDGET_ORDER_NO = New Global.System.Data.DataColumn("BUDGET_ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NO)
            Me.columnBUDGET_ORDER_NAME = New Global.System.Data.DataColumn("BUDGET_ORDER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NAME)
            Me.columnDEPT_NO = New Global.System.Data.DataColumn("DEPT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_NO)
            Me.columnPERSON_IN_CHARGE = New Global.System.Data.DataColumn("PERSON_IN_CHARGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE)
            Me.columnPERSON_IN_CHARGE_NAME = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NAME)
            Me.columnACTUAL_FIRST_HALF = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF)
            Me.columnREVISE_SECOND_HALF = New Global.System.Data.DataColumn("REVISE_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF)
            Me.columnM1 = New Global.System.Data.DataColumn("M1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1)
            Me.columnM2 = New Global.System.Data.DataColumn("M2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2)
            Me.columnM3 = New Global.System.Data.DataColumn("M3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3)
            Me.columnM4 = New Global.System.Data.DataColumn("M4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4)
            Me.columnM5 = New Global.System.Data.DataColumn("M5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5)
            Me.columnM6 = New Global.System.Data.DataColumn("M6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6)
            Me.columnFIRST_HALF_SUM = New Global.System.Data.DataColumn("FIRST_HALF_SUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST_HALF_SUM)
            Me.columnSECOND_HALF_SUM = New Global.System.Data.DataColumn("SECOND_HALF_SUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECOND_HALF_SUM)
            Me.columnYEAR_SUM = New Global.System.Data.DataColumn("YEAR_SUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR_SUM)
            Me.columnLAST_YEAR_SUM = New Global.System.Data.DataColumn("LAST_YEAR_SUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_YEAR_SUM)
            Me.columnDIFF_YEAR = New Global.System.Data.DataColumn("DIFF_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_YEAR)
            Me.columnACTUAL_FIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF_FIXCOST)
            Me.columnACTUAL_FIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF_VARIABLECOST)
            Me.columnREVISE_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_FIXCOST)
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_VARIABLECOST)
            Me.columnM1_FIXCOST = New Global.System.Data.DataColumn("M1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1_FIXCOST)
            Me.columnM1_VARIABLECOST = New Global.System.Data.DataColumn("M1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1_VARIABLECOST)
            Me.columnM2_FIXCOST = New Global.System.Data.DataColumn("M2_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2_FIXCOST)
            Me.columnM2_VARIABLECOST = New Global.System.Data.DataColumn("M2_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2_VARIABLECOST)
            Me.columnM3_FIXCOST = New Global.System.Data.DataColumn("M3_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3_FIXCOST)
            Me.columnM3_VARIABLECOST = New Global.System.Data.DataColumn("M3_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3_VARIABLECOST)
            Me.columnM4_FIXCOST = New Global.System.Data.DataColumn("M4_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4_FIXCOST)
            Me.columnM4_VARIABLECOST = New Global.System.Data.DataColumn("M4_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4_VARIABLECOST)
            Me.columnM5_FIXCOST = New Global.System.Data.DataColumn("M5_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5_FIXCOST)
            Me.columnM5_VARIABLECOST = New Global.System.Data.DataColumn("M5_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5_VARIABLECOST)
            Me.columnM6_FIXCOST = New Global.System.Data.DataColumn("M6_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6_FIXCOST)
            Me.columnM6_VARIABLECOST = New Global.System.Data.DataColumn("M6_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6_VARIABLECOST)
            Me.columnFIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST_HALF_FIXCOST)
            Me.columnFIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST_HALF_VARIABLECOST)
            Me.columnSECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECOND_HALF_FIXCOST)
            Me.columnSECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECOND_HALF_VARIABLECOST)
            Me.columnYEAR_FIXCOST = New Global.System.Data.DataColumn("YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR_FIXCOST)
            Me.columnYEAR_VARIABLECOST = New Global.System.Data.DataColumn("YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR_VARIABLECOST)
            Me.columnLAST_YEAR_SUM_FIXCOST = New Global.System.Data.DataColumn("LAST_YEAR_SUM_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_YEAR_SUM_FIXCOST)
            Me.columnLAST_YEAR_SUM_VARIABLECOST = New Global.System.Data.DataColumn("LAST_YEAR_SUM_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_YEAR_SUM_VARIABLECOST)
            Me.columnDIFF_YEAR_FIXCOST = New Global.System.Data.DataColumn("DIFF_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_YEAR_FIXCOST)
            Me.columnDIFF_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_YEAR_VARIABLECOST)
            Me.columnCOST_TYPE = New Global.System.Data.DataColumn("COST_TYPE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOST_TYPE)
            Me.columnMTP_RRT1 = New Global.System.Data.DataColumn("MTP_RRT1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTP_RRT1)
            Me.columnMTP_RRT1_VARIABLECOST = New Global.System.Data.DataColumn("MTP_RRT1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTP_RRT1_VARIABLECOST)
            Me.columnMTP_RRT1_FIXCOST = New Global.System.Data.DataColumn("MTP_RRT1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTP_RRT1_FIXCOST)
            Me.columnDIFF_MTP = New Global.System.Data.DataColumn("DIFF_MTP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_MTP)
            Me.columnDIFF_MTP_FIXCOST = New Global.System.Data.DataColumn("DIFF_MTP_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_MTP_FIXCOST)
            Me.columnDIFF_MTP_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_MTP_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_MTP_VARIABLECOST)
            Me.columnM7 = New Global.System.Data.DataColumn("M7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7)
            Me.columnM8 = New Global.System.Data.DataColumn("M8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8)
            Me.columnM9 = New Global.System.Data.DataColumn("M9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9)
            Me.columnM10 = New Global.System.Data.DataColumn("M10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10)
            Me.columnM11 = New Global.System.Data.DataColumn("M11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11)
            Me.columnM12 = New Global.System.Data.DataColumn("M12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12)
            Me.columnM7_FIXCOST = New Global.System.Data.DataColumn("M7_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_FIXCOST)
            Me.columnM7_VARIABLECOST = New Global.System.Data.DataColumn("M7_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_VARIABLECOST)
            Me.columnM8_FIXCOST = New Global.System.Data.DataColumn("M8_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_FIXCOST)
            Me.columnM8_VARIABLECOST = New Global.System.Data.DataColumn("M8_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_VARIABLECOST)
            Me.columnM9_FIXCOST = New Global.System.Data.DataColumn("M9_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_FIXCOST)
            Me.columnM9_VARIABLECOST = New Global.System.Data.DataColumn("M9_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_VARIABLECOST)
            Me.columnM10_FIXCOST = New Global.System.Data.DataColumn("M10_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_FIXCOST)
            Me.columnM10_VARIABLECOST = New Global.System.Data.DataColumn("M10_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_VARIABLECOST)
            Me.columnM11_FIXCOST = New Global.System.Data.DataColumn("M11_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_FIXCOST)
            Me.columnM11_VARIABLECOST = New Global.System.Data.DataColumn("M11_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_VARIABLECOST)
            Me.columnM12_FIXCOST = New Global.System.Data.DataColumn("M12_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_FIXCOST)
            Me.columnM12_VARIABLECOST = New Global.System.Data.DataColumn("M12_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_VARIABLECOST)
            Me.columnMTP_RRT1_VARIABLECOST.Caption = "MTP_RRT1"
            Me.columnMTP_RRT1_FIXCOST.Caption = "MTP_RRT1"
            Me.columnDIFF_MTP.Caption = "MTP_RRT1"
            Me.columnDIFF_MTP_FIXCOST.Caption = "MTP_RRT1"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewBUDGET_DATARow() As BUDGET_DATARow
            Return CType(Me.NewRow,BUDGET_DATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BUDGET_DATARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BUDGET_DATARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BUDGET_DATARowChangedEvent) Is Nothing) Then
                RaiseEvent BUDGET_DATARowChanged(Me, New BUDGET_DATARowChangeEvent(CType(e.Row,BUDGET_DATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BUDGET_DATARowChangingEvent) Is Nothing) Then
                RaiseEvent BUDGET_DATARowChanging(Me, New BUDGET_DATARowChangeEvent(CType(e.Row,BUDGET_DATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BUDGET_DATARowDeletedEvent) Is Nothing) Then
                RaiseEvent BUDGET_DATARowDeleted(Me, New BUDGET_DATARowChangeEvent(CType(e.Row,BUDGET_DATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BUDGET_DATARowDeletingEvent) Is Nothing) Then
                RaiseEvent BUDGET_DATARowDeleting(Me, New BUDGET_DATARowChangeEvent(CType(e.Row,BUDGET_DATARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveBUDGET_DATARow(ByVal row As BUDGET_DATARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS001 = New DS001
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BUDGET_DATADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REVISE_BUDGETDataTable
        Inherits Global.System.Data.TypedTableBase(Of REVISE_BUDGETRow)
        
        Private columnBUDGET_ORDER_NO As Global.System.Data.DataColumn
        
        Private columnBUDGET_ORDER_NAME As Global.System.Data.DataColumn
        
        Private columnDEPT_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NAME As Global.System.Data.DataColumn
        
        Private columnORIGINAL_FIRST_HALF As Global.System.Data.DataColumn
        
        Private columnM1 As Global.System.Data.DataColumn
        
        Private columnM2 As Global.System.Data.DataColumn
        
        Private columnM3 As Global.System.Data.DataColumn
        
        Private columnM4 As Global.System.Data.DataColumn
        
        Private columnM5 As Global.System.Data.DataColumn
        
        Private columnM6 As Global.System.Data.DataColumn
        
        Private columnESTIMATE_FIRST_HALF As Global.System.Data.DataColumn
        
        Private columnDIFF_FIRST_HALF As Global.System.Data.DataColumn
        
        Private columnORIGINAL_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnM7 As Global.System.Data.DataColumn
        
        Private columnM8 As Global.System.Data.DataColumn
        
        Private columnM9 As Global.System.Data.DataColumn
        
        Private columnM10 As Global.System.Data.DataColumn
        
        Private columnM11 As Global.System.Data.DataColumn
        
        Private columnM12 As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnDIFF_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR As Global.System.Data.DataColumn
        
        Private columnRRT1 As Global.System.Data.DataColumn
        
        Private columnRRT2 As Global.System.Data.DataColumn
        
        Private columnRRT3 As Global.System.Data.DataColumn
        
        Private columnRRT4 As Global.System.Data.DataColumn
        
        Private columnRRT5 As Global.System.Data.DataColumn
        
        Private columnRRT1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT2_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT2_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT3_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT3_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT4_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT4_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT5_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT5_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM2_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM2_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM3_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM3_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM4_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM4_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM5_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM5_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM6_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM6_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnORIGINAL_FIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnORIGINAL_FIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM7_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM7_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM8_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM8_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM9_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM9_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM10_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM10_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM11_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM11_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM12_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM12_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_FIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_FIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFF_FIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_FIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnORIGINAL_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnORIGINAL_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFF_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REVISE_BUDGET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_FIRST_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_FIRST_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_FIRST_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_FIRST_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_FIRST_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_FIRST_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M2_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM2_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M3_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM3_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M4_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM4_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M5_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM5_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M6_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM6_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_FIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_FIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_FIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_FIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_FIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_FIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGINAL_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGINAL_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REVISE_BUDGETRow
            Get
                Return CType(Me.Rows(index),REVISE_BUDGETRow)
            End Get
        End Property
        
        Public Event REVISE_BUDGETRowChanging As REVISE_BUDGETRowChangeEventHandler
        
        Public Event REVISE_BUDGETRowChanged As REVISE_BUDGETRowChangeEventHandler
        
        Public Event REVISE_BUDGETRowDeleting As REVISE_BUDGETRowChangeEventHandler
        
        Public Event REVISE_BUDGETRowDeleted As REVISE_BUDGETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREVISE_BUDGETRow(ByVal row As REVISE_BUDGETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREVISE_BUDGETRow( _
                    ByVal BUDGET_ORDER_NO As String,  _
                    ByVal BUDGET_ORDER_NAME As String,  _
                    ByVal DEPT_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NAME As String,  _
                    ByVal ORIGINAL_FIRST_HALF As Double,  _
                    ByVal M1 As Double,  _
                    ByVal M2 As Double,  _
                    ByVal M3 As Double,  _
                    ByVal M4 As Double,  _
                    ByVal M5 As Double,  _
                    ByVal M6 As Double,  _
                    ByVal ESTIMATE_FIRST_HALF As Double,  _
                    ByVal DIFF_FIRST_HALF As Double,  _
                    ByVal ORIGINAL_SECOND_HALF As Double,  _
                    ByVal M7 As Double,  _
                    ByVal M8 As Double,  _
                    ByVal M9 As Double,  _
                    ByVal M10 As Double,  _
                    ByVal M11 As Double,  _
                    ByVal M12 As Double,  _
                    ByVal REVISE_SECOND_HALF As Double,  _
                    ByVal DIFF_SECOND_HALF As Double,  _
                    ByVal REVISE_TOTAL_YEAR As Double,  _
                    ByVal DIFF_TOTAL_YEAR As Double,  _
                    ByVal RRT1 As Double,  _
                    ByVal RRT2 As Double,  _
                    ByVal RRT3 As Double,  _
                    ByVal RRT4 As Double,  _
                    ByVal RRT5 As Double,  _
                    ByVal RRT1_FIXCOST As Double,  _
                    ByVal RRT1_VARIABLECOST As Double,  _
                    ByVal RRT2_FIXCOST As Double,  _
                    ByVal RRT2_VARIABLECOST As Double,  _
                    ByVal RRT3_FIXCOST As Double,  _
                    ByVal RRT3_VARIABLECOST As Double,  _
                    ByVal RRT4_FIXCOST As Double,  _
                    ByVal RRT4_VARIABLECOST As Double,  _
                    ByVal RRT5_FIXCOST As Double,  _
                    ByVal RRT5_VARIABLECOST As Double,  _
                    ByVal M1_FIXCOST As Double,  _
                    ByVal M1_VARIABLECOST As Double,  _
                    ByVal M2_FIXCOST As Double,  _
                    ByVal M2_VARIABLECOST As Double,  _
                    ByVal M3_FIXCOST As Double,  _
                    ByVal M3_VARIABLECOST As Double,  _
                    ByVal M4_FIXCOST As Double,  _
                    ByVal M4_VARIABLECOST As Double,  _
                    ByVal M5_FIXCOST As Double,  _
                    ByVal M5_VARIABLECOST As Double,  _
                    ByVal M6_FIXCOST As Double,  _
                    ByVal M6_VARIABLECOST As Double,  _
                    ByVal ORIGINAL_FIRST_HALF_FIXCOST As Double,  _
                    ByVal ORIGINAL_FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal M7_FIXCOST As Double,  _
                    ByVal M7_VARIABLECOST As Double,  _
                    ByVal M8_FIXCOST As Double,  _
                    ByVal M8_VARIABLECOST As Double,  _
                    ByVal M9_FIXCOST As Double,  _
                    ByVal M9_VARIABLECOST As Double,  _
                    ByVal M10_FIXCOST As Double,  _
                    ByVal M10_VARIABLECOST As Double,  _
                    ByVal M11_FIXCOST As Double,  _
                    ByVal M11_VARIABLECOST As Double,  _
                    ByVal M12_FIXCOST As Double,  _
                    ByVal M12_VARIABLECOST As Double,  _
                    ByVal ESTIMATE_FIRST_HALF_FIXCOST As Double,  _
                    ByVal ESTIMATE_FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal DIFF_FIRST_HALF_FIXCOST As Double,  _
                    ByVal DIFF_FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal ORIGINAL_SECOND_HALF_FIXCOST As Double,  _
                    ByVal ORIGINAL_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal REVISE_SECOND_HALF_FIXCOST As Double,  _
                    ByVal REVISE_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal DIFF_SECOND_HALF_FIXCOST As Double,  _
                    ByVal DIFF_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal REVISE_TOTAL_YEAR_FIXCOST As Double,  _
                    ByVal REVISE_TOTAL_YEAR_VARIABLECOST As Double,  _
                    ByVal DIFF_TOTAL_YEAR_FIXCOST As Double,  _
                    ByVal DIFF_TOTAL_YEAR_VARIABLECOST As Double) As REVISE_BUDGETRow
            Dim rowREVISE_BUDGETRow As REVISE_BUDGETRow = CType(Me.NewRow,REVISE_BUDGETRow)
            Dim columnValuesArray() As Object = New Object() {BUDGET_ORDER_NO, BUDGET_ORDER_NAME, DEPT_NO, PERSON_IN_CHARGE_NO, PERSON_IN_CHARGE_NAME, ORIGINAL_FIRST_HALF, M1, M2, M3, M4, M5, M6, ESTIMATE_FIRST_HALF, DIFF_FIRST_HALF, ORIGINAL_SECOND_HALF, M7, M8, M9, M10, M11, M12, REVISE_SECOND_HALF, DIFF_SECOND_HALF, REVISE_TOTAL_YEAR, DIFF_TOTAL_YEAR, RRT1, RRT2, RRT3, RRT4, RRT5, RRT1_FIXCOST, RRT1_VARIABLECOST, RRT2_FIXCOST, RRT2_VARIABLECOST, RRT3_FIXCOST, RRT3_VARIABLECOST, RRT4_FIXCOST, RRT4_VARIABLECOST, RRT5_FIXCOST, RRT5_VARIABLECOST, M1_FIXCOST, M1_VARIABLECOST, M2_FIXCOST, M2_VARIABLECOST, M3_FIXCOST, M3_VARIABLECOST, M4_FIXCOST, M4_VARIABLECOST, M5_FIXCOST, M5_VARIABLECOST, M6_FIXCOST, M6_VARIABLECOST, ORIGINAL_FIRST_HALF_FIXCOST, ORIGINAL_FIRST_HALF_VARIABLECOST, M7_FIXCOST, M7_VARIABLECOST, M8_FIXCOST, M8_VARIABLECOST, M9_FIXCOST, M9_VARIABLECOST, M10_FIXCOST, M10_VARIABLECOST, M11_FIXCOST, M11_VARIABLECOST, M12_FIXCOST, M12_VARIABLECOST, ESTIMATE_FIRST_HALF_FIXCOST, ESTIMATE_FIRST_HALF_VARIABLECOST, DIFF_FIRST_HALF_FIXCOST, DIFF_FIRST_HALF_VARIABLECOST, ORIGINAL_SECOND_HALF_FIXCOST, ORIGINAL_SECOND_HALF_VARIABLECOST, REVISE_SECOND_HALF_FIXCOST, REVISE_SECOND_HALF_VARIABLECOST, DIFF_SECOND_HALF_FIXCOST, DIFF_SECOND_HALF_VARIABLECOST, REVISE_TOTAL_YEAR_FIXCOST, REVISE_TOTAL_YEAR_VARIABLECOST, DIFF_TOTAL_YEAR_FIXCOST, DIFF_TOTAL_YEAR_VARIABLECOST}
            rowREVISE_BUDGETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREVISE_BUDGETRow)
            Return rowREVISE_BUDGETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REVISE_BUDGETDataTable = CType(MyBase.Clone,REVISE_BUDGETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REVISE_BUDGETDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBUDGET_ORDER_NO = MyBase.Columns("BUDGET_ORDER_NO")
            Me.columnBUDGET_ORDER_NAME = MyBase.Columns("BUDGET_ORDER_NAME")
            Me.columnDEPT_NO = MyBase.Columns("DEPT_NO")
            Me.columnPERSON_IN_CHARGE_NO = MyBase.Columns("PERSON_IN_CHARGE_NO")
            Me.columnPERSON_IN_CHARGE_NAME = MyBase.Columns("PERSON_IN_CHARGE_NAME")
            Me.columnORIGINAL_FIRST_HALF = MyBase.Columns("ORIGINAL_FIRST_HALF")
            Me.columnM1 = MyBase.Columns("M1")
            Me.columnM2 = MyBase.Columns("M2")
            Me.columnM3 = MyBase.Columns("M3")
            Me.columnM4 = MyBase.Columns("M4")
            Me.columnM5 = MyBase.Columns("M5")
            Me.columnM6 = MyBase.Columns("M6")
            Me.columnESTIMATE_FIRST_HALF = MyBase.Columns("ESTIMATE_FIRST_HALF")
            Me.columnDIFF_FIRST_HALF = MyBase.Columns("DIFF_FIRST_HALF")
            Me.columnORIGINAL_SECOND_HALF = MyBase.Columns("ORIGINAL_SECOND_HALF")
            Me.columnM7 = MyBase.Columns("M7")
            Me.columnM8 = MyBase.Columns("M8")
            Me.columnM9 = MyBase.Columns("M9")
            Me.columnM10 = MyBase.Columns("M10")
            Me.columnM11 = MyBase.Columns("M11")
            Me.columnM12 = MyBase.Columns("M12")
            Me.columnREVISE_SECOND_HALF = MyBase.Columns("REVISE_SECOND_HALF")
            Me.columnDIFF_SECOND_HALF = MyBase.Columns("DIFF_SECOND_HALF")
            Me.columnREVISE_TOTAL_YEAR = MyBase.Columns("REVISE_TOTAL_YEAR")
            Me.columnDIFF_TOTAL_YEAR = MyBase.Columns("DIFF_TOTAL_YEAR")
            Me.columnRRT1 = MyBase.Columns("RRT1")
            Me.columnRRT2 = MyBase.Columns("RRT2")
            Me.columnRRT3 = MyBase.Columns("RRT3")
            Me.columnRRT4 = MyBase.Columns("RRT4")
            Me.columnRRT5 = MyBase.Columns("RRT5")
            Me.columnRRT1_FIXCOST = MyBase.Columns("RRT1_FIXCOST")
            Me.columnRRT1_VARIABLECOST = MyBase.Columns("RRT1_VARIABLECOST")
            Me.columnRRT2_FIXCOST = MyBase.Columns("RRT2_FIXCOST")
            Me.columnRRT2_VARIABLECOST = MyBase.Columns("RRT2_VARIABLECOST")
            Me.columnRRT3_FIXCOST = MyBase.Columns("RRT3_FIXCOST")
            Me.columnRRT3_VARIABLECOST = MyBase.Columns("RRT3_VARIABLECOST")
            Me.columnRRT4_FIXCOST = MyBase.Columns("RRT4_FIXCOST")
            Me.columnRRT4_VARIABLECOST = MyBase.Columns("RRT4_VARIABLECOST")
            Me.columnRRT5_FIXCOST = MyBase.Columns("RRT5_FIXCOST")
            Me.columnRRT5_VARIABLECOST = MyBase.Columns("RRT5_VARIABLECOST")
            Me.columnM1_FIXCOST = MyBase.Columns("M1_FIXCOST")
            Me.columnM1_VARIABLECOST = MyBase.Columns("M1_VARIABLECOST")
            Me.columnM2_FIXCOST = MyBase.Columns("M2_FIXCOST")
            Me.columnM2_VARIABLECOST = MyBase.Columns("M2_VARIABLECOST")
            Me.columnM3_FIXCOST = MyBase.Columns("M3_FIXCOST")
            Me.columnM3_VARIABLECOST = MyBase.Columns("M3_VARIABLECOST")
            Me.columnM4_FIXCOST = MyBase.Columns("M4_FIXCOST")
            Me.columnM4_VARIABLECOST = MyBase.Columns("M4_VARIABLECOST")
            Me.columnM5_FIXCOST = MyBase.Columns("M5_FIXCOST")
            Me.columnM5_VARIABLECOST = MyBase.Columns("M5_VARIABLECOST")
            Me.columnM6_FIXCOST = MyBase.Columns("M6_FIXCOST")
            Me.columnM6_VARIABLECOST = MyBase.Columns("M6_VARIABLECOST")
            Me.columnORIGINAL_FIRST_HALF_FIXCOST = MyBase.Columns("ORIGINAL_FIRST_HALF_FIXCOST")
            Me.columnORIGINAL_FIRST_HALF_VARIABLECOST = MyBase.Columns("ORIGINAL_FIRST_HALF_VARIABLECOST")
            Me.columnM7_FIXCOST = MyBase.Columns("M7_FIXCOST")
            Me.columnM7_VARIABLECOST = MyBase.Columns("M7_VARIABLECOST")
            Me.columnM8_FIXCOST = MyBase.Columns("M8_FIXCOST")
            Me.columnM8_VARIABLECOST = MyBase.Columns("M8_VARIABLECOST")
            Me.columnM9_FIXCOST = MyBase.Columns("M9_FIXCOST")
            Me.columnM9_VARIABLECOST = MyBase.Columns("M9_VARIABLECOST")
            Me.columnM10_FIXCOST = MyBase.Columns("M10_FIXCOST")
            Me.columnM10_VARIABLECOST = MyBase.Columns("M10_VARIABLECOST")
            Me.columnM11_FIXCOST = MyBase.Columns("M11_FIXCOST")
            Me.columnM11_VARIABLECOST = MyBase.Columns("M11_VARIABLECOST")
            Me.columnM12_FIXCOST = MyBase.Columns("M12_FIXCOST")
            Me.columnM12_VARIABLECOST = MyBase.Columns("M12_VARIABLECOST")
            Me.columnESTIMATE_FIRST_HALF_FIXCOST = MyBase.Columns("ESTIMATE_FIRST_HALF_FIXCOST")
            Me.columnESTIMATE_FIRST_HALF_VARIABLECOST = MyBase.Columns("ESTIMATE_FIRST_HALF_VARIABLECOST")
            Me.columnDIFF_FIRST_HALF_FIXCOST = MyBase.Columns("DIFF_FIRST_HALF_FIXCOST")
            Me.columnDIFF_FIRST_HALF_VARIABLECOST = MyBase.Columns("DIFF_FIRST_HALF_VARIABLECOST")
            Me.columnORIGINAL_SECOND_HALF_FIXCOST = MyBase.Columns("ORIGINAL_SECOND_HALF_FIXCOST")
            Me.columnORIGINAL_SECOND_HALF_VARIABLECOST = MyBase.Columns("ORIGINAL_SECOND_HALF_VARIABLECOST")
            Me.columnREVISE_SECOND_HALF_FIXCOST = MyBase.Columns("REVISE_SECOND_HALF_FIXCOST")
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = MyBase.Columns("REVISE_SECOND_HALF_VARIABLECOST")
            Me.columnDIFF_SECOND_HALF_FIXCOST = MyBase.Columns("DIFF_SECOND_HALF_FIXCOST")
            Me.columnDIFF_SECOND_HALF_VARIABLECOST = MyBase.Columns("DIFF_SECOND_HALF_VARIABLECOST")
            Me.columnREVISE_TOTAL_YEAR_FIXCOST = MyBase.Columns("REVISE_TOTAL_YEAR_FIXCOST")
            Me.columnREVISE_TOTAL_YEAR_VARIABLECOST = MyBase.Columns("REVISE_TOTAL_YEAR_VARIABLECOST")
            Me.columnDIFF_TOTAL_YEAR_FIXCOST = MyBase.Columns("DIFF_TOTAL_YEAR_FIXCOST")
            Me.columnDIFF_TOTAL_YEAR_VARIABLECOST = MyBase.Columns("DIFF_TOTAL_YEAR_VARIABLECOST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBUDGET_ORDER_NO = New Global.System.Data.DataColumn("BUDGET_ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NO)
            Me.columnBUDGET_ORDER_NAME = New Global.System.Data.DataColumn("BUDGET_ORDER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NAME)
            Me.columnDEPT_NO = New Global.System.Data.DataColumn("DEPT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_NO)
            Me.columnPERSON_IN_CHARGE_NO = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NO)
            Me.columnPERSON_IN_CHARGE_NAME = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NAME)
            Me.columnORIGINAL_FIRST_HALF = New Global.System.Data.DataColumn("ORIGINAL_FIRST_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_FIRST_HALF)
            Me.columnM1 = New Global.System.Data.DataColumn("M1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1)
            Me.columnM2 = New Global.System.Data.DataColumn("M2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2)
            Me.columnM3 = New Global.System.Data.DataColumn("M3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3)
            Me.columnM4 = New Global.System.Data.DataColumn("M4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4)
            Me.columnM5 = New Global.System.Data.DataColumn("M5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5)
            Me.columnM6 = New Global.System.Data.DataColumn("M6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6)
            Me.columnESTIMATE_FIRST_HALF = New Global.System.Data.DataColumn("ESTIMATE_FIRST_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_FIRST_HALF)
            Me.columnDIFF_FIRST_HALF = New Global.System.Data.DataColumn("DIFF_FIRST_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_FIRST_HALF)
            Me.columnORIGINAL_SECOND_HALF = New Global.System.Data.DataColumn("ORIGINAL_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_SECOND_HALF)
            Me.columnM7 = New Global.System.Data.DataColumn("M7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7)
            Me.columnM8 = New Global.System.Data.DataColumn("M8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8)
            Me.columnM9 = New Global.System.Data.DataColumn("M9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9)
            Me.columnM10 = New Global.System.Data.DataColumn("M10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10)
            Me.columnM11 = New Global.System.Data.DataColumn("M11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11)
            Me.columnM12 = New Global.System.Data.DataColumn("M12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12)
            Me.columnREVISE_SECOND_HALF = New Global.System.Data.DataColumn("REVISE_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF)
            Me.columnDIFF_SECOND_HALF = New Global.System.Data.DataColumn("DIFF_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_SECOND_HALF)
            Me.columnREVISE_TOTAL_YEAR = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR)
            Me.columnDIFF_TOTAL_YEAR = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR)
            Me.columnRRT1 = New Global.System.Data.DataColumn("RRT1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1)
            Me.columnRRT2 = New Global.System.Data.DataColumn("RRT2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2)
            Me.columnRRT3 = New Global.System.Data.DataColumn("RRT3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3)
            Me.columnRRT4 = New Global.System.Data.DataColumn("RRT4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4)
            Me.columnRRT5 = New Global.System.Data.DataColumn("RRT5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5)
            Me.columnRRT1_FIXCOST = New Global.System.Data.DataColumn("RRT1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1_FIXCOST)
            Me.columnRRT1_VARIABLECOST = New Global.System.Data.DataColumn("RRT1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1_VARIABLECOST)
            Me.columnRRT2_FIXCOST = New Global.System.Data.DataColumn("RRT2_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2_FIXCOST)
            Me.columnRRT2_VARIABLECOST = New Global.System.Data.DataColumn("RRT2_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2_VARIABLECOST)
            Me.columnRRT3_FIXCOST = New Global.System.Data.DataColumn("RRT3_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3_FIXCOST)
            Me.columnRRT3_VARIABLECOST = New Global.System.Data.DataColumn("RRT3_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3_VARIABLECOST)
            Me.columnRRT4_FIXCOST = New Global.System.Data.DataColumn("RRT4_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4_FIXCOST)
            Me.columnRRT4_VARIABLECOST = New Global.System.Data.DataColumn("RRT4_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4_VARIABLECOST)
            Me.columnRRT5_FIXCOST = New Global.System.Data.DataColumn("RRT5_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5_FIXCOST)
            Me.columnRRT5_VARIABLECOST = New Global.System.Data.DataColumn("RRT5_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5_VARIABLECOST)
            Me.columnM1_FIXCOST = New Global.System.Data.DataColumn("M1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1_FIXCOST)
            Me.columnM1_VARIABLECOST = New Global.System.Data.DataColumn("M1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM1_VARIABLECOST)
            Me.columnM2_FIXCOST = New Global.System.Data.DataColumn("M2_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2_FIXCOST)
            Me.columnM2_VARIABLECOST = New Global.System.Data.DataColumn("M2_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM2_VARIABLECOST)
            Me.columnM3_FIXCOST = New Global.System.Data.DataColumn("M3_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3_FIXCOST)
            Me.columnM3_VARIABLECOST = New Global.System.Data.DataColumn("M3_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM3_VARIABLECOST)
            Me.columnM4_FIXCOST = New Global.System.Data.DataColumn("M4_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4_FIXCOST)
            Me.columnM4_VARIABLECOST = New Global.System.Data.DataColumn("M4_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM4_VARIABLECOST)
            Me.columnM5_FIXCOST = New Global.System.Data.DataColumn("M5_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5_FIXCOST)
            Me.columnM5_VARIABLECOST = New Global.System.Data.DataColumn("M5_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM5_VARIABLECOST)
            Me.columnM6_FIXCOST = New Global.System.Data.DataColumn("M6_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6_FIXCOST)
            Me.columnM6_VARIABLECOST = New Global.System.Data.DataColumn("M6_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM6_VARIABLECOST)
            Me.columnORIGINAL_FIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("ORIGINAL_FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_FIRST_HALF_FIXCOST)
            Me.columnORIGINAL_FIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ORIGINAL_FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_FIRST_HALF_VARIABLECOST)
            Me.columnM7_FIXCOST = New Global.System.Data.DataColumn("M7_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_FIXCOST)
            Me.columnM7_VARIABLECOST = New Global.System.Data.DataColumn("M7_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_VARIABLECOST)
            Me.columnM8_FIXCOST = New Global.System.Data.DataColumn("M8_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_FIXCOST)
            Me.columnM8_VARIABLECOST = New Global.System.Data.DataColumn("M8_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_VARIABLECOST)
            Me.columnM9_FIXCOST = New Global.System.Data.DataColumn("M9_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_FIXCOST)
            Me.columnM9_VARIABLECOST = New Global.System.Data.DataColumn("M9_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_VARIABLECOST)
            Me.columnM10_FIXCOST = New Global.System.Data.DataColumn("M10_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_FIXCOST)
            Me.columnM10_VARIABLECOST = New Global.System.Data.DataColumn("M10_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_VARIABLECOST)
            Me.columnM11_FIXCOST = New Global.System.Data.DataColumn("M11_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_FIXCOST)
            Me.columnM11_VARIABLECOST = New Global.System.Data.DataColumn("M11_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_VARIABLECOST)
            Me.columnM12_FIXCOST = New Global.System.Data.DataColumn("M12_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_FIXCOST)
            Me.columnM12_VARIABLECOST = New Global.System.Data.DataColumn("M12_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_VARIABLECOST)
            Me.columnESTIMATE_FIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("ESTIMATE_FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_FIRST_HALF_FIXCOST)
            Me.columnESTIMATE_FIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ESTIMATE_FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_FIRST_HALF_VARIABLECOST)
            Me.columnDIFF_FIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("DIFF_FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_FIRST_HALF_FIXCOST)
            Me.columnDIFF_FIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_FIRST_HALF_VARIABLECOST)
            Me.columnORIGINAL_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("ORIGINAL_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_SECOND_HALF_FIXCOST)
            Me.columnORIGINAL_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ORIGINAL_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGINAL_SECOND_HALF_VARIABLECOST)
            Me.columnREVISE_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_FIXCOST)
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_VARIABLECOST)
            Me.columnDIFF_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("DIFF_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_SECOND_HALF_FIXCOST)
            Me.columnDIFF_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_SECOND_HALF_VARIABLECOST)
            Me.columnREVISE_TOTAL_YEAR_FIXCOST = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR_FIXCOST)
            Me.columnREVISE_TOTAL_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR_VARIABLECOST)
            Me.columnDIFF_TOTAL_YEAR_FIXCOST = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR_FIXCOST)
            Me.columnDIFF_TOTAL_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR_VARIABLECOST)
            Me.columnM1_FIXCOST.Caption = "M1"
            Me.columnM1_VARIABLECOST.Caption = "M1"
            Me.columnM2_FIXCOST.Caption = "M2"
            Me.columnM2_VARIABLECOST.Caption = "M2"
            Me.columnM3_FIXCOST.Caption = "M3"
            Me.columnM3_VARIABLECOST.Caption = "M3"
            Me.columnM4_FIXCOST.Caption = "M4"
            Me.columnM4_VARIABLECOST.Caption = "M4"
            Me.columnM5_FIXCOST.Caption = "M5"
            Me.columnM5_VARIABLECOST.Caption = "M5"
            Me.columnM6_FIXCOST.Caption = "M6"
            Me.columnM6_VARIABLECOST.Caption = "M6"
            Me.columnORIGINAL_FIRST_HALF_FIXCOST.Caption = "ORIGINAL_FIRST_HALF"
            Me.columnORIGINAL_FIRST_HALF_VARIABLECOST.Caption = "ORIGINAL_FIRST_HALF"
            Me.columnM7_FIXCOST.Caption = "M7"
            Me.columnM7_VARIABLECOST.Caption = "M7"
            Me.columnM8_FIXCOST.Caption = "M8"
            Me.columnM8_VARIABLECOST.Caption = "M8"
            Me.columnM9_FIXCOST.Caption = "M9"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREVISE_BUDGETRow() As REVISE_BUDGETRow
            Return CType(Me.NewRow,REVISE_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REVISE_BUDGETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REVISE_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REVISE_BUDGETRowChangedEvent) Is Nothing) Then
                RaiseEvent REVISE_BUDGETRowChanged(Me, New REVISE_BUDGETRowChangeEvent(CType(e.Row,REVISE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REVISE_BUDGETRowChangingEvent) Is Nothing) Then
                RaiseEvent REVISE_BUDGETRowChanging(Me, New REVISE_BUDGETRowChangeEvent(CType(e.Row,REVISE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REVISE_BUDGETRowDeletedEvent) Is Nothing) Then
                RaiseEvent REVISE_BUDGETRowDeleted(Me, New REVISE_BUDGETRowChangeEvent(CType(e.Row,REVISE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REVISE_BUDGETRowDeletingEvent) Is Nothing) Then
                RaiseEvent REVISE_BUDGETRowDeleting(Me, New REVISE_BUDGETRowChangeEvent(CType(e.Row,REVISE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREVISE_BUDGETRow(ByVal row As REVISE_BUDGETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS001 = New DS001
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REVISE_BUDGETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ESTIMATE_BUDGETDataTable
        Inherits Global.System.Data.TypedTableBase(Of ESTIMATE_BUDGETRow)
        
        Private columnBUDGET_ORDER_NO As Global.System.Data.DataColumn
        
        Private columnBUDGET_ORDER_NAME As Global.System.Data.DataColumn
        
        Private columnDEPT_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NAME As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnM7 As Global.System.Data.DataColumn
        
        Private columnM7_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM7_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM8 As Global.System.Data.DataColumn
        
        Private columnM8_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM8_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM9 As Global.System.Data.DataColumn
        
        Private columnM9_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM9_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM10 As Global.System.Data.DataColumn
        
        Private columnM10_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM10_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM11 As Global.System.Data.DataColumn
        
        Private columnM11_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM11_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnM12 As Global.System.Data.DataColumn
        
        Private columnM12_FIXCOST As Global.System.Data.DataColumn
        
        Private columnM12_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnDIFFERENCE_SECOND_HALF As Global.System.Data.DataColumn
        
        Private columnESTIMATE_TOTAL_YEAR As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnACTUAL_FIRST_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnREVISE_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFFERENCE_SECOND_HALF_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFFERENCE_SECOND_HALF_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_TOTAL_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnESTIMATE_TOTAL_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ESTIMATE_BUDGET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M7_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM7_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M8_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM8_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M9_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM9_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M10_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM10_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M11_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM11_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M12_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM12_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFFERENCE_SECOND_HALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFFERENCE_SECOND_HALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_TOTAL_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_TOTAL_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ACTUAL_FIRST_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTUAL_FIRST_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFFERENCE_SECOND_HALF_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFFERENCE_SECOND_HALF_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFFERENCE_SECOND_HALF_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFFERENCE_SECOND_HALF_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_TOTAL_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_TOTAL_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTIMATE_TOTAL_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTIMATE_TOTAL_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ESTIMATE_BUDGETRow
            Get
                Return CType(Me.Rows(index),ESTIMATE_BUDGETRow)
            End Get
        End Property
        
        Public Event ESTIMATE_BUDGETRowChanging As ESTIMATE_BUDGETRowChangeEventHandler
        
        Public Event ESTIMATE_BUDGETRowChanged As ESTIMATE_BUDGETRowChangeEventHandler
        
        Public Event ESTIMATE_BUDGETRowDeleting As ESTIMATE_BUDGETRowChangeEventHandler
        
        Public Event ESTIMATE_BUDGETRowDeleted As ESTIMATE_BUDGETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddESTIMATE_BUDGETRow(ByVal row As ESTIMATE_BUDGETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddESTIMATE_BUDGETRow( _
                    ByVal BUDGET_ORDER_NO As String,  _
                    ByVal BUDGET_ORDER_NAME As String,  _
                    ByVal DEPT_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NAME As String,  _
                    ByVal ACTUAL_FIRST_HALF As Double,  _
                    ByVal REVISE_SECOND_HALF As Double,  _
                    ByVal M7 As Double,  _
                    ByVal M7_FIXCOST As Double,  _
                    ByVal M7_VARIABLECOST As Double,  _
                    ByVal M8 As Double,  _
                    ByVal M8_FIXCOST As Double,  _
                    ByVal M8_VARIABLECOST As Double,  _
                    ByVal M9 As Double,  _
                    ByVal M9_FIXCOST As Double,  _
                    ByVal M9_VARIABLECOST As Double,  _
                    ByVal M10 As Double,  _
                    ByVal M10_FIXCOST As Double,  _
                    ByVal M10_VARIABLECOST As Double,  _
                    ByVal M11 As Double,  _
                    ByVal M11_FIXCOST As Double,  _
                    ByVal M11_VARIABLECOST As Double,  _
                    ByVal M12 As Double,  _
                    ByVal M12_FIXCOST As Double,  _
                    ByVal M12_VARIABLECOST As Double,  _
                    ByVal ESTIMATE_SECOND_HALF As Double,  _
                    ByVal DIFFERENCE_SECOND_HALF As Double,  _
                    ByVal ESTIMATE_TOTAL_YEAR As Double,  _
                    ByVal ACTUAL_FIRST_HALF_FIXCOST As Double,  _
                    ByVal ACTUAL_FIRST_HALF_VARIABLECOST As Double,  _
                    ByVal REVISE_SECOND_HALF_FIXCOST As Double,  _
                    ByVal REVISE_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal ESTIMATE_SECOND_HALF_FIXCOST As Double,  _
                    ByVal ESTIMATE_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal DIFFERENCE_SECOND_HALF_FIXCOST As Double,  _
                    ByVal DIFFERENCE_SECOND_HALF_VARIABLECOST As Double,  _
                    ByVal ESTIMATE_TOTAL_YEAR_FIXCOST As Double,  _
                    ByVal ESTIMATE_TOTAL_YEAR_VARIABLECOST As Double) As ESTIMATE_BUDGETRow
            Dim rowESTIMATE_BUDGETRow As ESTIMATE_BUDGETRow = CType(Me.NewRow,ESTIMATE_BUDGETRow)
            Dim columnValuesArray() As Object = New Object() {BUDGET_ORDER_NO, BUDGET_ORDER_NAME, DEPT_NO, PERSON_IN_CHARGE_NO, PERSON_IN_CHARGE_NAME, ACTUAL_FIRST_HALF, REVISE_SECOND_HALF, M7, M7_FIXCOST, M7_VARIABLECOST, M8, M8_FIXCOST, M8_VARIABLECOST, M9, M9_FIXCOST, M9_VARIABLECOST, M10, M10_FIXCOST, M10_VARIABLECOST, M11, M11_FIXCOST, M11_VARIABLECOST, M12, M12_FIXCOST, M12_VARIABLECOST, ESTIMATE_SECOND_HALF, DIFFERENCE_SECOND_HALF, ESTIMATE_TOTAL_YEAR, ACTUAL_FIRST_HALF_FIXCOST, ACTUAL_FIRST_HALF_VARIABLECOST, REVISE_SECOND_HALF_FIXCOST, REVISE_SECOND_HALF_VARIABLECOST, ESTIMATE_SECOND_HALF_FIXCOST, ESTIMATE_SECOND_HALF_VARIABLECOST, DIFFERENCE_SECOND_HALF_FIXCOST, DIFFERENCE_SECOND_HALF_VARIABLECOST, ESTIMATE_TOTAL_YEAR_FIXCOST, ESTIMATE_TOTAL_YEAR_VARIABLECOST}
            rowESTIMATE_BUDGETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowESTIMATE_BUDGETRow)
            Return rowESTIMATE_BUDGETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ESTIMATE_BUDGETDataTable = CType(MyBase.Clone,ESTIMATE_BUDGETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ESTIMATE_BUDGETDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBUDGET_ORDER_NO = MyBase.Columns("BUDGET_ORDER_NO")
            Me.columnBUDGET_ORDER_NAME = MyBase.Columns("BUDGET_ORDER_NAME")
            Me.columnDEPT_NO = MyBase.Columns("DEPT_NO")
            Me.columnPERSON_IN_CHARGE_NO = MyBase.Columns("PERSON_IN_CHARGE_NO")
            Me.columnPERSON_IN_CHARGE_NAME = MyBase.Columns("PERSON_IN_CHARGE_NAME")
            Me.columnACTUAL_FIRST_HALF = MyBase.Columns("ACTUAL_FIRST_HALF")
            Me.columnREVISE_SECOND_HALF = MyBase.Columns("REVISE_SECOND_HALF")
            Me.columnM7 = MyBase.Columns("M7")
            Me.columnM7_FIXCOST = MyBase.Columns("M7_FIXCOST")
            Me.columnM7_VARIABLECOST = MyBase.Columns("M7_VARIABLECOST")
            Me.columnM8 = MyBase.Columns("M8")
            Me.columnM8_FIXCOST = MyBase.Columns("M8_FIXCOST")
            Me.columnM8_VARIABLECOST = MyBase.Columns("M8_VARIABLECOST")
            Me.columnM9 = MyBase.Columns("M9")
            Me.columnM9_FIXCOST = MyBase.Columns("M9_FIXCOST")
            Me.columnM9_VARIABLECOST = MyBase.Columns("M9_VARIABLECOST")
            Me.columnM10 = MyBase.Columns("M10")
            Me.columnM10_FIXCOST = MyBase.Columns("M10_FIXCOST")
            Me.columnM10_VARIABLECOST = MyBase.Columns("M10_VARIABLECOST")
            Me.columnM11 = MyBase.Columns("M11")
            Me.columnM11_FIXCOST = MyBase.Columns("M11_FIXCOST")
            Me.columnM11_VARIABLECOST = MyBase.Columns("M11_VARIABLECOST")
            Me.columnM12 = MyBase.Columns("M12")
            Me.columnM12_FIXCOST = MyBase.Columns("M12_FIXCOST")
            Me.columnM12_VARIABLECOST = MyBase.Columns("M12_VARIABLECOST")
            Me.columnESTIMATE_SECOND_HALF = MyBase.Columns("ESTIMATE_SECOND_HALF")
            Me.columnDIFFERENCE_SECOND_HALF = MyBase.Columns("DIFFERENCE_SECOND_HALF")
            Me.columnESTIMATE_TOTAL_YEAR = MyBase.Columns("ESTIMATE_TOTAL_YEAR")
            Me.columnACTUAL_FIRST_HALF_FIXCOST = MyBase.Columns("ACTUAL_FIRST_HALF_FIXCOST")
            Me.columnACTUAL_FIRST_HALF_VARIABLECOST = MyBase.Columns("ACTUAL_FIRST_HALF_VARIABLECOST")
            Me.columnREVISE_SECOND_HALF_FIXCOST = MyBase.Columns("REVISE_SECOND_HALF_FIXCOST")
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = MyBase.Columns("REVISE_SECOND_HALF_VARIABLECOST")
            Me.columnESTIMATE_SECOND_HALF_FIXCOST = MyBase.Columns("ESTIMATE_SECOND_HALF_FIXCOST")
            Me.columnESTIMATE_SECOND_HALF_VARIABLECOST = MyBase.Columns("ESTIMATE_SECOND_HALF_VARIABLECOST")
            Me.columnDIFFERENCE_SECOND_HALF_FIXCOST = MyBase.Columns("DIFFERENCE_SECOND_HALF_FIXCOST")
            Me.columnDIFFERENCE_SECOND_HALF_VARIABLECOST = MyBase.Columns("DIFFERENCE_SECOND_HALF_VARIABLECOST")
            Me.columnESTIMATE_TOTAL_YEAR_FIXCOST = MyBase.Columns("ESTIMATE_TOTAL_YEAR_FIXCOST")
            Me.columnESTIMATE_TOTAL_YEAR_VARIABLECOST = MyBase.Columns("ESTIMATE_TOTAL_YEAR_VARIABLECOST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBUDGET_ORDER_NO = New Global.System.Data.DataColumn("BUDGET_ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NO)
            Me.columnBUDGET_ORDER_NAME = New Global.System.Data.DataColumn("BUDGET_ORDER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NAME)
            Me.columnDEPT_NO = New Global.System.Data.DataColumn("DEPT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_NO)
            Me.columnPERSON_IN_CHARGE_NO = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NO)
            Me.columnPERSON_IN_CHARGE_NAME = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NAME)
            Me.columnACTUAL_FIRST_HALF = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF)
            Me.columnREVISE_SECOND_HALF = New Global.System.Data.DataColumn("REVISE_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF)
            Me.columnM7 = New Global.System.Data.DataColumn("M7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7)
            Me.columnM7_FIXCOST = New Global.System.Data.DataColumn("M7_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_FIXCOST)
            Me.columnM7_VARIABLECOST = New Global.System.Data.DataColumn("M7_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM7_VARIABLECOST)
            Me.columnM8 = New Global.System.Data.DataColumn("M8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8)
            Me.columnM8_FIXCOST = New Global.System.Data.DataColumn("M8_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_FIXCOST)
            Me.columnM8_VARIABLECOST = New Global.System.Data.DataColumn("M8_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM8_VARIABLECOST)
            Me.columnM9 = New Global.System.Data.DataColumn("M9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9)
            Me.columnM9_FIXCOST = New Global.System.Data.DataColumn("M9_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_FIXCOST)
            Me.columnM9_VARIABLECOST = New Global.System.Data.DataColumn("M9_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM9_VARIABLECOST)
            Me.columnM10 = New Global.System.Data.DataColumn("M10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10)
            Me.columnM10_FIXCOST = New Global.System.Data.DataColumn("M10_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_FIXCOST)
            Me.columnM10_VARIABLECOST = New Global.System.Data.DataColumn("M10_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM10_VARIABLECOST)
            Me.columnM11 = New Global.System.Data.DataColumn("M11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11)
            Me.columnM11_FIXCOST = New Global.System.Data.DataColumn("M11_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_FIXCOST)
            Me.columnM11_VARIABLECOST = New Global.System.Data.DataColumn("M11_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM11_VARIABLECOST)
            Me.columnM12 = New Global.System.Data.DataColumn("M12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12)
            Me.columnM12_FIXCOST = New Global.System.Data.DataColumn("M12_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_FIXCOST)
            Me.columnM12_VARIABLECOST = New Global.System.Data.DataColumn("M12_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM12_VARIABLECOST)
            Me.columnESTIMATE_SECOND_HALF = New Global.System.Data.DataColumn("ESTIMATE_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_SECOND_HALF)
            Me.columnDIFFERENCE_SECOND_HALF = New Global.System.Data.DataColumn("DIFFERENCE_SECOND_HALF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFFERENCE_SECOND_HALF)
            Me.columnESTIMATE_TOTAL_YEAR = New Global.System.Data.DataColumn("ESTIMATE_TOTAL_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_TOTAL_YEAR)
            Me.columnACTUAL_FIRST_HALF_FIXCOST = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF_FIXCOST)
            Me.columnACTUAL_FIRST_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ACTUAL_FIRST_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTUAL_FIRST_HALF_VARIABLECOST)
            Me.columnREVISE_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_FIXCOST)
            Me.columnREVISE_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("REVISE_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_SECOND_HALF_VARIABLECOST)
            Me.columnESTIMATE_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("ESTIMATE_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_SECOND_HALF_FIXCOST)
            Me.columnESTIMATE_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("ESTIMATE_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_SECOND_HALF_VARIABLECOST)
            Me.columnDIFFERENCE_SECOND_HALF_FIXCOST = New Global.System.Data.DataColumn("DIFFERENCE_SECOND_HALF_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFFERENCE_SECOND_HALF_FIXCOST)
            Me.columnDIFFERENCE_SECOND_HALF_VARIABLECOST = New Global.System.Data.DataColumn("DIFFERENCE_SECOND_HALF_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFFERENCE_SECOND_HALF_VARIABLECOST)
            Me.columnESTIMATE_TOTAL_YEAR_FIXCOST = New Global.System.Data.DataColumn("ESTIMATE_TOTAL_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_TOTAL_YEAR_FIXCOST)
            Me.columnESTIMATE_TOTAL_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("ESTIMATE_TOTAL_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTIMATE_TOTAL_YEAR_VARIABLECOST)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewESTIMATE_BUDGETRow() As ESTIMATE_BUDGETRow
            Return CType(Me.NewRow,ESTIMATE_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ESTIMATE_BUDGETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ESTIMATE_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ESTIMATE_BUDGETRowChangedEvent) Is Nothing) Then
                RaiseEvent ESTIMATE_BUDGETRowChanged(Me, New ESTIMATE_BUDGETRowChangeEvent(CType(e.Row,ESTIMATE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ESTIMATE_BUDGETRowChangingEvent) Is Nothing) Then
                RaiseEvent ESTIMATE_BUDGETRowChanging(Me, New ESTIMATE_BUDGETRowChangeEvent(CType(e.Row,ESTIMATE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ESTIMATE_BUDGETRowDeletedEvent) Is Nothing) Then
                RaiseEvent ESTIMATE_BUDGETRowDeleted(Me, New ESTIMATE_BUDGETRowChangeEvent(CType(e.Row,ESTIMATE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ESTIMATE_BUDGETRowDeletingEvent) Is Nothing) Then
                RaiseEvent ESTIMATE_BUDGETRowDeleting(Me, New ESTIMATE_BUDGETRowChangeEvent(CType(e.Row,ESTIMATE_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveESTIMATE_BUDGETRow(ByVal row As ESTIMATE_BUDGETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS001 = New DS001
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ESTIMATE_BUDGETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BG_M_SETTINGSDataTable
        Inherits Global.System.Data.TypedTableBase(Of BG_M_SETTINGSRow)
        
        Private columnAUTH1_IMAGE As Global.System.Data.DataColumn
        
        Private columnAUTH2_IMAGE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BG_M_SETTINGS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUTH1_IMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTH1_IMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUTH2_IMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTH2_IMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BG_M_SETTINGSRow
            Get
                Return CType(Me.Rows(index),BG_M_SETTINGSRow)
            End Get
        End Property
        
        Public Event BG_M_SETTINGSRowChanging As BG_M_SETTINGSRowChangeEventHandler
        
        Public Event BG_M_SETTINGSRowChanged As BG_M_SETTINGSRowChangeEventHandler
        
        Public Event BG_M_SETTINGSRowDeleting As BG_M_SETTINGSRowChangeEventHandler
        
        Public Event BG_M_SETTINGSRowDeleted As BG_M_SETTINGSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddBG_M_SETTINGSRow(ByVal row As BG_M_SETTINGSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddBG_M_SETTINGSRow(ByVal AUTH1_IMAGE() As Byte, ByVal AUTH2_IMAGE() As Byte) As BG_M_SETTINGSRow
            Dim rowBG_M_SETTINGSRow As BG_M_SETTINGSRow = CType(Me.NewRow,BG_M_SETTINGSRow)
            Dim columnValuesArray() As Object = New Object() {AUTH1_IMAGE, AUTH2_IMAGE}
            rowBG_M_SETTINGSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBG_M_SETTINGSRow)
            Return rowBG_M_SETTINGSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BG_M_SETTINGSDataTable = CType(MyBase.Clone,BG_M_SETTINGSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BG_M_SETTINGSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnAUTH1_IMAGE = MyBase.Columns("AUTH1_IMAGE")
            Me.columnAUTH2_IMAGE = MyBase.Columns("AUTH2_IMAGE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnAUTH1_IMAGE = New Global.System.Data.DataColumn("AUTH1_IMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTH1_IMAGE)
            Me.columnAUTH2_IMAGE = New Global.System.Data.DataColumn("AUTH2_IMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTH2_IMAGE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewBG_M_SETTINGSRow() As BG_M_SETTINGSRow
            Return CType(Me.NewRow,BG_M_SETTINGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BG_M_SETTINGSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BG_M_SETTINGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BG_M_SETTINGSRowChangedEvent) Is Nothing) Then
                RaiseEvent BG_M_SETTINGSRowChanged(Me, New BG_M_SETTINGSRowChangeEvent(CType(e.Row,BG_M_SETTINGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BG_M_SETTINGSRowChangingEvent) Is Nothing) Then
                RaiseEvent BG_M_SETTINGSRowChanging(Me, New BG_M_SETTINGSRowChangeEvent(CType(e.Row,BG_M_SETTINGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BG_M_SETTINGSRowDeletedEvent) Is Nothing) Then
                RaiseEvent BG_M_SETTINGSRowDeleted(Me, New BG_M_SETTINGSRowChangeEvent(CType(e.Row,BG_M_SETTINGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BG_M_SETTINGSRowDeletingEvent) Is Nothing) Then
                RaiseEvent BG_M_SETTINGSRowDeleting(Me, New BG_M_SETTINGSRowChangeEvent(CType(e.Row,BG_M_SETTINGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveBG_M_SETTINGSRow(ByVal row As BG_M_SETTINGSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS001 = New DS001
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BG_M_SETTINGSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MTP_BUDGETDataTable
        Inherits Global.System.Data.TypedTableBase(Of MTP_BUDGETRow)
        
        Private columnBUDGET_ORDER_NO As Global.System.Data.DataColumn
        
        Private columnBUDGET_ORDER_NAME As Global.System.Data.DataColumn
        
        Private columnDEPT_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NO As Global.System.Data.DataColumn
        
        Private columnPERSON_IN_CHARGE_NAME As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR As Global.System.Data.DataColumn
        
        Private columnRRT1 As Global.System.Data.DataColumn
        
        Private columnRRT2 As Global.System.Data.DataColumn
        
        Private columnRRT3 As Global.System.Data.DataColumn
        
        Private columnRRT4 As Global.System.Data.DataColumn
        
        Private columnRRT5 As Global.System.Data.DataColumn
        
        Private columnRRT1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT2_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT2_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT3_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT3_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT4_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT4_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnRRT5_FIXCOST As Global.System.Data.DataColumn
        
        Private columnRRT5_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnREVISE_TOTAL_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR_FIXCOST As Global.System.Data.DataColumn
        
        Private columnDIFF_TOTAL_YEAR_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT1 As Global.System.Data.DataColumn
        
        Private columnPrevRRT2 As Global.System.Data.DataColumn
        
        Private columnPrevRRT3 As Global.System.Data.DataColumn
        
        Private columnPrevRRT4 As Global.System.Data.DataColumn
        
        Private columnPrevRRT5 As Global.System.Data.DataColumn
        
        Private columnPrevRRT1_FIXCOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT1_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT2_FIXCOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT2_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT3_FIXCOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT3_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT4_FIXCOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT4_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT5_FIXCOST As Global.System.Data.DataColumn
        
        Private columnPrevRRT5_VARIABLECOST As Global.System.Data.DataColumn
        
        Private columnPIC_SHOW_FLG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MTP_BUDGET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BUDGET_ORDER_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUDGET_ORDER_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERSON_IN_CHARGE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERSON_IN_CHARGE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT2_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT2_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT3_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT3_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT4_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT4_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RRT5_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRRT5_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REVISE_TOTAL_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_TOTAL_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEAR_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIFF_TOTAL_YEAR_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFF_TOTAL_YEAR_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT1_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT1_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT1_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT1_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT2_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT2_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT2_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT2_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT3_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT3_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT3_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT3_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT4_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT4_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT4_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT4_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT5_FIXCOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT5_FIXCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrevRRT5_VARIABLECOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevRRT5_VARIABLECOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PIC_SHOW_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPIC_SHOW_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MTP_BUDGETRow
            Get
                Return CType(Me.Rows(index),MTP_BUDGETRow)
            End Get
        End Property
        
        Public Event MTP_BUDGETRowChanging As MTP_BUDGETRowChangeEventHandler
        
        Public Event MTP_BUDGETRowChanged As MTP_BUDGETRowChangeEventHandler
        
        Public Event MTP_BUDGETRowDeleting As MTP_BUDGETRowChangeEventHandler
        
        Public Event MTP_BUDGETRowDeleted As MTP_BUDGETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMTP_BUDGETRow(ByVal row As MTP_BUDGETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMTP_BUDGETRow( _
                    ByVal BUDGET_ORDER_NO As String,  _
                    ByVal BUDGET_ORDER_NAME As String,  _
                    ByVal DEPT_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NO As String,  _
                    ByVal PERSON_IN_CHARGE_NAME As String,  _
                    ByVal REVISE_TOTAL_YEAR As Double,  _
                    ByVal DIFF_TOTAL_YEAR As Double,  _
                    ByVal RRT1 As Double,  _
                    ByVal RRT2 As Double,  _
                    ByVal RRT3 As Double,  _
                    ByVal RRT4 As Double,  _
                    ByVal RRT5 As Double,  _
                    ByVal RRT1_FIXCOST As Double,  _
                    ByVal RRT1_VARIABLECOST As Double,  _
                    ByVal RRT2_FIXCOST As Double,  _
                    ByVal RRT2_VARIABLECOST As Double,  _
                    ByVal RRT3_FIXCOST As Double,  _
                    ByVal RRT3_VARIABLECOST As Double,  _
                    ByVal RRT4_FIXCOST As Double,  _
                    ByVal RRT4_VARIABLECOST As Double,  _
                    ByVal RRT5_FIXCOST As Double,  _
                    ByVal RRT5_VARIABLECOST As Double,  _
                    ByVal REVISE_TOTAL_YEAR_FIXCOST As Double,  _
                    ByVal REVISE_TOTAL_YEAR_VARIABLECOST As Double,  _
                    ByVal DIFF_TOTAL_YEAR_FIXCOST As Double,  _
                    ByVal DIFF_TOTAL_YEAR_VARIABLECOST As Double,  _
                    ByVal PrevRRT1 As Double,  _
                    ByVal PrevRRT2 As Double,  _
                    ByVal PrevRRT3 As Double,  _
                    ByVal PrevRRT4 As Double,  _
                    ByVal PrevRRT5 As Double,  _
                    ByVal PrevRRT1_FIXCOST As Double,  _
                    ByVal PrevRRT1_VARIABLECOST As Double,  _
                    ByVal PrevRRT2_FIXCOST As Double,  _
                    ByVal PrevRRT2_VARIABLECOST As Double,  _
                    ByVal PrevRRT3_FIXCOST As Double,  _
                    ByVal PrevRRT3_VARIABLECOST As Double,  _
                    ByVal PrevRRT4_FIXCOST As Double,  _
                    ByVal PrevRRT4_VARIABLECOST As Double,  _
                    ByVal PrevRRT5_FIXCOST As Double,  _
                    ByVal PrevRRT5_VARIABLECOST As Double,  _
                    ByVal PIC_SHOW_FLG As Byte) As MTP_BUDGETRow
            Dim rowMTP_BUDGETRow As MTP_BUDGETRow = CType(Me.NewRow,MTP_BUDGETRow)
            Dim columnValuesArray() As Object = New Object() {BUDGET_ORDER_NO, BUDGET_ORDER_NAME, DEPT_NO, PERSON_IN_CHARGE_NO, PERSON_IN_CHARGE_NAME, REVISE_TOTAL_YEAR, DIFF_TOTAL_YEAR, RRT1, RRT2, RRT3, RRT4, RRT5, RRT1_FIXCOST, RRT1_VARIABLECOST, RRT2_FIXCOST, RRT2_VARIABLECOST, RRT3_FIXCOST, RRT3_VARIABLECOST, RRT4_FIXCOST, RRT4_VARIABLECOST, RRT5_FIXCOST, RRT5_VARIABLECOST, REVISE_TOTAL_YEAR_FIXCOST, REVISE_TOTAL_YEAR_VARIABLECOST, DIFF_TOTAL_YEAR_FIXCOST, DIFF_TOTAL_YEAR_VARIABLECOST, PrevRRT1, PrevRRT2, PrevRRT3, PrevRRT4, PrevRRT5, PrevRRT1_FIXCOST, PrevRRT1_VARIABLECOST, PrevRRT2_FIXCOST, PrevRRT2_VARIABLECOST, PrevRRT3_FIXCOST, PrevRRT3_VARIABLECOST, PrevRRT4_FIXCOST, PrevRRT4_VARIABLECOST, PrevRRT5_FIXCOST, PrevRRT5_VARIABLECOST, PIC_SHOW_FLG}
            rowMTP_BUDGETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMTP_BUDGETRow)
            Return rowMTP_BUDGETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MTP_BUDGETDataTable = CType(MyBase.Clone,MTP_BUDGETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MTP_BUDGETDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBUDGET_ORDER_NO = MyBase.Columns("BUDGET_ORDER_NO")
            Me.columnBUDGET_ORDER_NAME = MyBase.Columns("BUDGET_ORDER_NAME")
            Me.columnDEPT_NO = MyBase.Columns("DEPT_NO")
            Me.columnPERSON_IN_CHARGE_NO = MyBase.Columns("PERSON_IN_CHARGE_NO")
            Me.columnPERSON_IN_CHARGE_NAME = MyBase.Columns("PERSON_IN_CHARGE_NAME")
            Me.columnREVISE_TOTAL_YEAR = MyBase.Columns("REVISE_TOTAL_YEAR")
            Me.columnDIFF_TOTAL_YEAR = MyBase.Columns("DIFF_TOTAL_YEAR")
            Me.columnRRT1 = MyBase.Columns("RRT1")
            Me.columnRRT2 = MyBase.Columns("RRT2")
            Me.columnRRT3 = MyBase.Columns("RRT3")
            Me.columnRRT4 = MyBase.Columns("RRT4")
            Me.columnRRT5 = MyBase.Columns("RRT5")
            Me.columnRRT1_FIXCOST = MyBase.Columns("RRT1_FIXCOST")
            Me.columnRRT1_VARIABLECOST = MyBase.Columns("RRT1_VARIABLECOST")
            Me.columnRRT2_FIXCOST = MyBase.Columns("RRT2_FIXCOST")
            Me.columnRRT2_VARIABLECOST = MyBase.Columns("RRT2_VARIABLECOST")
            Me.columnRRT3_FIXCOST = MyBase.Columns("RRT3_FIXCOST")
            Me.columnRRT3_VARIABLECOST = MyBase.Columns("RRT3_VARIABLECOST")
            Me.columnRRT4_FIXCOST = MyBase.Columns("RRT4_FIXCOST")
            Me.columnRRT4_VARIABLECOST = MyBase.Columns("RRT4_VARIABLECOST")
            Me.columnRRT5_FIXCOST = MyBase.Columns("RRT5_FIXCOST")
            Me.columnRRT5_VARIABLECOST = MyBase.Columns("RRT5_VARIABLECOST")
            Me.columnREVISE_TOTAL_YEAR_FIXCOST = MyBase.Columns("REVISE_TOTAL_YEAR_FIXCOST")
            Me.columnREVISE_TOTAL_YEAR_VARIABLECOST = MyBase.Columns("REVISE_TOTAL_YEAR_VARIABLECOST")
            Me.columnDIFF_TOTAL_YEAR_FIXCOST = MyBase.Columns("DIFF_TOTAL_YEAR_FIXCOST")
            Me.columnDIFF_TOTAL_YEAR_VARIABLECOST = MyBase.Columns("DIFF_TOTAL_YEAR_VARIABLECOST")
            Me.columnPrevRRT1 = MyBase.Columns("PrevRRT1")
            Me.columnPrevRRT2 = MyBase.Columns("PrevRRT2")
            Me.columnPrevRRT3 = MyBase.Columns("PrevRRT3")
            Me.columnPrevRRT4 = MyBase.Columns("PrevRRT4")
            Me.columnPrevRRT5 = MyBase.Columns("PrevRRT5")
            Me.columnPrevRRT1_FIXCOST = MyBase.Columns("PrevRRT1_FIXCOST")
            Me.columnPrevRRT1_VARIABLECOST = MyBase.Columns("PrevRRT1_VARIABLECOST")
            Me.columnPrevRRT2_FIXCOST = MyBase.Columns("PrevRRT2_FIXCOST")
            Me.columnPrevRRT2_VARIABLECOST = MyBase.Columns("PrevRRT2_VARIABLECOST")
            Me.columnPrevRRT3_FIXCOST = MyBase.Columns("PrevRRT3_FIXCOST")
            Me.columnPrevRRT3_VARIABLECOST = MyBase.Columns("PrevRRT3_VARIABLECOST")
            Me.columnPrevRRT4_FIXCOST = MyBase.Columns("PrevRRT4_FIXCOST")
            Me.columnPrevRRT4_VARIABLECOST = MyBase.Columns("PrevRRT4_VARIABLECOST")
            Me.columnPrevRRT5_FIXCOST = MyBase.Columns("PrevRRT5_FIXCOST")
            Me.columnPrevRRT5_VARIABLECOST = MyBase.Columns("PrevRRT5_VARIABLECOST")
            Me.columnPIC_SHOW_FLG = MyBase.Columns("PIC_SHOW_FLG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBUDGET_ORDER_NO = New Global.System.Data.DataColumn("BUDGET_ORDER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NO)
            Me.columnBUDGET_ORDER_NAME = New Global.System.Data.DataColumn("BUDGET_ORDER_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUDGET_ORDER_NAME)
            Me.columnDEPT_NO = New Global.System.Data.DataColumn("DEPT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPT_NO)
            Me.columnPERSON_IN_CHARGE_NO = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NO)
            Me.columnPERSON_IN_CHARGE_NAME = New Global.System.Data.DataColumn("PERSON_IN_CHARGE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERSON_IN_CHARGE_NAME)
            Me.columnREVISE_TOTAL_YEAR = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR)
            Me.columnDIFF_TOTAL_YEAR = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR)
            Me.columnRRT1 = New Global.System.Data.DataColumn("RRT1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1)
            Me.columnRRT2 = New Global.System.Data.DataColumn("RRT2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2)
            Me.columnRRT3 = New Global.System.Data.DataColumn("RRT3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3)
            Me.columnRRT4 = New Global.System.Data.DataColumn("RRT4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4)
            Me.columnRRT5 = New Global.System.Data.DataColumn("RRT5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5)
            Me.columnRRT1_FIXCOST = New Global.System.Data.DataColumn("RRT1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1_FIXCOST)
            Me.columnRRT1_VARIABLECOST = New Global.System.Data.DataColumn("RRT1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT1_VARIABLECOST)
            Me.columnRRT2_FIXCOST = New Global.System.Data.DataColumn("RRT2_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2_FIXCOST)
            Me.columnRRT2_VARIABLECOST = New Global.System.Data.DataColumn("RRT2_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT2_VARIABLECOST)
            Me.columnRRT3_FIXCOST = New Global.System.Data.DataColumn("RRT3_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3_FIXCOST)
            Me.columnRRT3_VARIABLECOST = New Global.System.Data.DataColumn("RRT3_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT3_VARIABLECOST)
            Me.columnRRT4_FIXCOST = New Global.System.Data.DataColumn("RRT4_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4_FIXCOST)
            Me.columnRRT4_VARIABLECOST = New Global.System.Data.DataColumn("RRT4_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT4_VARIABLECOST)
            Me.columnRRT5_FIXCOST = New Global.System.Data.DataColumn("RRT5_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5_FIXCOST)
            Me.columnRRT5_VARIABLECOST = New Global.System.Data.DataColumn("RRT5_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRRT5_VARIABLECOST)
            Me.columnREVISE_TOTAL_YEAR_FIXCOST = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR_FIXCOST)
            Me.columnREVISE_TOTAL_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("REVISE_TOTAL_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_TOTAL_YEAR_VARIABLECOST)
            Me.columnDIFF_TOTAL_YEAR_FIXCOST = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR_FIXCOST)
            Me.columnDIFF_TOTAL_YEAR_VARIABLECOST = New Global.System.Data.DataColumn("DIFF_TOTAL_YEAR_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFF_TOTAL_YEAR_VARIABLECOST)
            Me.columnPrevRRT1 = New Global.System.Data.DataColumn("PrevRRT1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT1)
            Me.columnPrevRRT2 = New Global.System.Data.DataColumn("PrevRRT2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT2)
            Me.columnPrevRRT3 = New Global.System.Data.DataColumn("PrevRRT3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT3)
            Me.columnPrevRRT4 = New Global.System.Data.DataColumn("PrevRRT4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT4)
            Me.columnPrevRRT5 = New Global.System.Data.DataColumn("PrevRRT5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT5)
            Me.columnPrevRRT1_FIXCOST = New Global.System.Data.DataColumn("PrevRRT1_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT1_FIXCOST)
            Me.columnPrevRRT1_VARIABLECOST = New Global.System.Data.DataColumn("PrevRRT1_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT1_VARIABLECOST)
            Me.columnPrevRRT2_FIXCOST = New Global.System.Data.DataColumn("PrevRRT2_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT2_FIXCOST)
            Me.columnPrevRRT2_VARIABLECOST = New Global.System.Data.DataColumn("PrevRRT2_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT2_VARIABLECOST)
            Me.columnPrevRRT3_FIXCOST = New Global.System.Data.DataColumn("PrevRRT3_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT3_FIXCOST)
            Me.columnPrevRRT3_VARIABLECOST = New Global.System.Data.DataColumn("PrevRRT3_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT3_VARIABLECOST)
            Me.columnPrevRRT4_FIXCOST = New Global.System.Data.DataColumn("PrevRRT4_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT4_FIXCOST)
            Me.columnPrevRRT4_VARIABLECOST = New Global.System.Data.DataColumn("PrevRRT4_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT4_VARIABLECOST)
            Me.columnPrevRRT5_FIXCOST = New Global.System.Data.DataColumn("PrevRRT5_FIXCOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT5_FIXCOST)
            Me.columnPrevRRT5_VARIABLECOST = New Global.System.Data.DataColumn("PrevRRT5_VARIABLECOST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevRRT5_VARIABLECOST)
            Me.columnPIC_SHOW_FLG = New Global.System.Data.DataColumn("PIC_SHOW_FLG", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPIC_SHOW_FLG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMTP_BUDGETRow() As MTP_BUDGETRow
            Return CType(Me.NewRow,MTP_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MTP_BUDGETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MTP_BUDGETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MTP_BUDGETRowChangedEvent) Is Nothing) Then
                RaiseEvent MTP_BUDGETRowChanged(Me, New MTP_BUDGETRowChangeEvent(CType(e.Row,MTP_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MTP_BUDGETRowChangingEvent) Is Nothing) Then
                RaiseEvent MTP_BUDGETRowChanging(Me, New MTP_BUDGETRowChangeEvent(CType(e.Row,MTP_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MTP_BUDGETRowDeletedEvent) Is Nothing) Then
                RaiseEvent MTP_BUDGETRowDeleted(Me, New MTP_BUDGETRowChangeEvent(CType(e.Row,MTP_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MTP_BUDGETRowDeletingEvent) Is Nothing) Then
                RaiseEvent MTP_BUDGETRowDeleting(Me, New MTP_BUDGETRowChangeEvent(CType(e.Row,MTP_BUDGETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMTP_BUDGETRow(ByVal row As MTP_BUDGETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS001 = New DS001
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MTP_BUDGETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class BUDGET_DATARow
        Inherits Global.System.Data.DataRow
        
        Private tableBUDGET_DATA As BUDGET_DATADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBUDGET_DATA = CType(Me.Table,BUDGET_DATADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NO' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NAME' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DEPT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_NO' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DEPT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NAME' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M6Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FIRST_HALF_SUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.FIRST_HALF_SUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRST_HALF_SUM' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.FIRST_HALF_SUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SECOND_HALF_SUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.SECOND_HALF_SUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECOND_HALF_SUM' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.SECOND_HALF_SUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YEAR_SUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.YEAR_SUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEAR_SUM' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.YEAR_SUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LAST_YEAR_SUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.LAST_YEAR_SUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAST_YEAR_SUM' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.LAST_YEAR_SUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_YEAR' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF_FIXCOST' in table 'BUDGET_DATA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF_VARIABLECOST' in table 'BUDGET_DATA' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_FIXCOST' in table 'BUDGET_DATA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_VARIABLECOST' in table 'BUDGET_DATA' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M2_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M2_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M2_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M2_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M3_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M3_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M3_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M3_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M4_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M4_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M4_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M4_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M5_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M5_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M5_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M5_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M6_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M6_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M6_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M6_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRST_HALF_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRST_HALF_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECOND_HALF_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECOND_HALF_VARIABLECOST' in table 'BUDGET_DATA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEAR_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEAR_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LAST_YEAR_SUM_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAST_YEAR_SUM_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LAST_YEAR_SUM_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAST_YEAR_SUM_VARIABLECOST' in table 'BUDGET_DATA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_YEAR_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_YEAR_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COST_TYPE() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.COST_TYPEColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COST_TYPE' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.COST_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MTP_RRT1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.MTP_RRT1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTP_RRT1' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.MTP_RRT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MTP_RRT1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.MTP_RRT1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTP_RRT1_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.MTP_RRT1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MTP_RRT1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.MTP_RRT1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTP_RRT1_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.MTP_RRT1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_MTP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_MTPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_MTP' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_MTPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_MTP_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_MTP_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_MTP_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_MTP_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_MTP_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.DIFF_MTP_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_MTP_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.DIFF_MTP_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M7Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M8Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M9Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M7_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M7_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M7_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M7_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M8_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M8_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M8_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M8_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M9_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M9_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M9_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M9_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M10_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M10_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M10_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M10_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M11_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M11_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M11_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M11_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M12_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_FIXCOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M12_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBUDGET_DATA.M12_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_VARIABLECOST' in table 'BUDGET_DATA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBUDGET_DATA.M12_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.BUDGET_ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NONull()
            Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.BUDGET_ORDER_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NAMENull()
            Me(Me.tableBUDGET_DATA.BUDGET_ORDER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPT_NONull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DEPT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPT_NONull()
            Me(Me.tableBUDGET_DATA.DEPT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGENull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.PERSON_IN_CHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGENull()
            Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.PERSON_IN_CHARGE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NAMENull()
            Me(Me.tableBUDGET_DATA.PERSON_IN_CHARGE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALFNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALFNull()
            Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.REVISE_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALFNull()
            Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1Null()
            Me(Me.tableBUDGET_DATA.M1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2Null()
            Me(Me.tableBUDGET_DATA.M2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3Null()
            Me(Me.tableBUDGET_DATA.M3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4Null()
            Me(Me.tableBUDGET_DATA.M4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5Null()
            Me(Me.tableBUDGET_DATA.M5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6Null()
            Me(Me.tableBUDGET_DATA.M6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFIRST_HALF_SUMNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.FIRST_HALF_SUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFIRST_HALF_SUMNull()
            Me(Me.tableBUDGET_DATA.FIRST_HALF_SUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSECOND_HALF_SUMNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.SECOND_HALF_SUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSECOND_HALF_SUMNull()
            Me(Me.tableBUDGET_DATA.SECOND_HALF_SUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYEAR_SUMNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.YEAR_SUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYEAR_SUMNull()
            Me(Me.tableBUDGET_DATA.YEAR_SUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLAST_YEAR_SUMNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.LAST_YEAR_SUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLAST_YEAR_SUMNull()
            Me(Me.tableBUDGET_DATA.LAST_YEAR_SUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_YEARNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_YEARNull()
            Me(Me.tableBUDGET_DATA.DIFF_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALF_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.ACTUAL_FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.REVISE_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M2_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M2_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M2_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M2_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M3_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M3_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M3_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M3_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M4_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M4_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M4_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M4_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M5_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M5_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M5_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M5_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M6_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M6_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M6_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M6_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFIRST_HALF_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSECOND_HALF_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYEAR_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYEAR_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLAST_YEAR_SUM_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.LAST_YEAR_SUM_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLAST_YEAR_SUM_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLAST_YEAR_SUM_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.LAST_YEAR_SUM_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLAST_YEAR_SUM_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.LAST_YEAR_SUM_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_YEAR_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.DIFF_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_YEAR_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.DIFF_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOST_TYPENull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.COST_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOST_TYPENull()
            Me(Me.tableBUDGET_DATA.COST_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMTP_RRT1Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.MTP_RRT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMTP_RRT1Null()
            Me(Me.tableBUDGET_DATA.MTP_RRT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMTP_RRT1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.MTP_RRT1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMTP_RRT1_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.MTP_RRT1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMTP_RRT1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.MTP_RRT1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMTP_RRT1_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.MTP_RRT1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_MTPNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_MTPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_MTPNull()
            Me(Me.tableBUDGET_DATA.DIFF_MTPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_MTP_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_MTP_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_MTP_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.DIFF_MTP_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_MTP_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.DIFF_MTP_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_MTP_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.DIFF_MTP_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7Null()
            Me(Me.tableBUDGET_DATA.M7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8Null()
            Me(Me.tableBUDGET_DATA.M8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9Null()
            Me(Me.tableBUDGET_DATA.M9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10Null()
            Me(Me.tableBUDGET_DATA.M10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11Null()
            Me(Me.tableBUDGET_DATA.M11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12Null() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12Null()
            Me(Me.tableBUDGET_DATA.M12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M7_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M7_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M7_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M7_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M8_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M8_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M8_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M8_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M9_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M9_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M9_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M9_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M10_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M10_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M10_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M10_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M11_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M11_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M11_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M11_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M12_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_FIXCOSTNull()
            Me(Me.tableBUDGET_DATA.M12_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableBUDGET_DATA.M12_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_VARIABLECOSTNull()
            Me(Me.tableBUDGET_DATA.M12_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REVISE_BUDGETRow
        Inherits Global.System.Data.DataRow
        
        Private tableREVISE_BUDGET As REVISE_BUDGETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREVISE_BUDGET = CType(Me.Table,REVISE_BUDGETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NO' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NAME' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DEPT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_NO' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DEPT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NO' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NAME' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_FIRST_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_FIRST_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M6Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_FIRST_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_FIRST_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_FIRST_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_FIRST_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_SECOND_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M7Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M8Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M9Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_SECOND_HALF' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT2_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT2_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT2_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT2_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT3_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT3_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT3_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT3_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT4_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT4_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT4_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT4_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT5_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT5_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.RRT5_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.RRT5_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M1_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M2_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M2_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M2_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M2_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M2_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M2_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M3_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M3_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M3_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M3_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M3_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M3_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M4_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M4_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M4_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M4_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M4_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M4_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M5_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M5_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M5_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M5_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M5_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M5_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M6_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M6_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M6_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M6_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M6_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M6_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_FIRST_HALF_FIXCOST' in table 'REVISE_BUDGET' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_FIRST_HALF_VARIABLECOST' in table 'REVISE_BUDGET' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M7_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M7_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M7_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M7_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M8_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M8_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M8_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M8_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M9_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M9_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M9_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M9_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M10_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M10_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M10_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M10_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M11_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M11_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M11_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M11_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M12_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_FIXCOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M12_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.M12_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_VARIABLECOST' in table 'REVISE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.M12_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_FIRST_HALF_FIXCOST' in table 'REVISE_BUDGET' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_FIRST_HALF_VARIABLECOST' in table 'REVISE_BUDGET' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_FIRST_HALF_FIXCOST' in table 'REVISE_BUDGET' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_FIRST_HALF_VARIABLECOST' in table 'REVISE_BUDGET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_SECOND_HALF_FIXCOST' in table 'REVISE_BUDGET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGINAL_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGINAL_SECOND_HALF_VARIABLECOST' in table 'REVISE_BUDGET'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_FIXCOST' in table 'REVISE_BUDGET' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_VARIABLECOST' in table 'REVISE_BUDGET' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_SECOND_HALF_FIXCOST' in table 'REVISE_BUDGET' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_SECOND_HALF_VARIABLECOST' in table 'REVISE_BUDGET' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR_FIXCOST' in table 'REVISE_BUDGET' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR_VARIABLECOST' in table 'REVISE_BUDGET' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR_FIXCOST' in table 'REVISE_BUDGET' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR_VARIABLECOST' in table 'REVISE_BUDGET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.BUDGET_ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NONull()
            Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.BUDGET_ORDER_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NAMENull()
            Me(Me.tableREVISE_BUDGET.BUDGET_ORDER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPT_NONull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DEPT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPT_NONull()
            Me(Me.tableREVISE_BUDGET.DEPT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NONull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NONull()
            Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NAMENull()
            Me(Me.tableREVISE_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_FIRST_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_FIRST_HALFNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1Null()
            Me(Me.tableREVISE_BUDGET.M1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2Null()
            Me(Me.tableREVISE_BUDGET.M2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3Null()
            Me(Me.tableREVISE_BUDGET.M3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4Null()
            Me(Me.tableREVISE_BUDGET.M4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5Null()
            Me(Me.tableREVISE_BUDGET.M5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6Null()
            Me(Me.tableREVISE_BUDGET.M6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_FIRST_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_FIRST_HALFNull()
            Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_FIRST_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_FIRST_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_FIRST_HALFNull()
            Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_SECOND_HALFNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7Null()
            Me(Me.tableREVISE_BUDGET.M7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8Null()
            Me(Me.tableREVISE_BUDGET.M8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9Null()
            Me(Me.tableREVISE_BUDGET.M9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10Null()
            Me(Me.tableREVISE_BUDGET.M10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11Null()
            Me(Me.tableREVISE_BUDGET.M11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12Null()
            Me(Me.tableREVISE_BUDGET.M12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALFNull()
            Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_SECOND_HALFNull()
            Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEARNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEARNull()
            Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEARNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEARNull()
            Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1Null()
            Me(Me.tableREVISE_BUDGET.RRT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2Null()
            Me(Me.tableREVISE_BUDGET.RRT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3Null()
            Me(Me.tableREVISE_BUDGET.RRT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4Null()
            Me(Me.tableREVISE_BUDGET.RRT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5Null() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5Null()
            Me(Me.tableREVISE_BUDGET.RRT5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT2_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT2_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT2_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT2_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT3_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT3_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT3_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT3_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT4_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT4_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT4_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT4_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT5_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT5_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.RRT5_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.RRT5_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM1_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M2_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M2_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM2_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M2_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM2_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M2_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M3_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M3_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM3_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M3_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM3_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M3_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M4_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M4_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM4_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M4_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM4_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M4_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M5_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M5_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM5_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M5_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM5_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M5_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M6_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M6_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM6_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M6_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM6_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M6_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_FIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_FIRST_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_FIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_FIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M7_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M7_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M7_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M7_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M8_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M8_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M8_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M8_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M9_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M9_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M9_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M9_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M10_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M10_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M10_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M10_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M11_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M11_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M11_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M11_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M12_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.M12_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.M12_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.M12_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_FIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_FIRST_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_FIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_FIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.ESTIMATE_FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_FIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_FIRST_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_FIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_FIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORIGINAL_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORIGINAL_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.ORIGINAL_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEAR_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEAR_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEAR_FIXCOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEAR_VARIABLECOSTNull()
            Me(Me.tableREVISE_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ESTIMATE_BUDGETRow
        Inherits Global.System.Data.DataRow
        
        Private tableESTIMATE_BUDGET As ESTIMATE_BUDGETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableESTIMATE_BUDGET = CType(Me.Table,ESTIMATE_BUDGETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NO' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NAME' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.DEPT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_NO' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.DEPT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NO' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NAME' in table 'ESTIMATE_BUDGET' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M7Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M7_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M7_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M7_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M7_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M7_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M7_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M8Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M8_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M8_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M8_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M8_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M8_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M8_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M9Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M9_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M9_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M9_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M9_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M9_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M9_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M10_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M10_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M10_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M10_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M10_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M10_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M11_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M11_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M11_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M11_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M11_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M11_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M12_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_FIXCOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M12_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M12_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.M12_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'M12_VARIABLECOST' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.M12_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_SECOND_HALF' in table 'ESTIMATE_BUDGET' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFFERENCE_SECOND_HALF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFFERENCE_SECOND_HALF' in table 'ESTIMATE_BUDGET' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_TOTAL_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_TOTAL_YEAR' in table 'ESTIMATE_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF_FIXCOST' in table 'ESTIMATE_BUDGET' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ACTUAL_FIRST_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTUAL_FIRST_HALF_VARIABLECOST' in table 'ESTIMATE_BUDGET' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_FIXCOST' in table 'ESTIMATE_BUDGET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_SECOND_HALF_VARIABLECOST' in table 'ESTIMATE_BUDGET'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_SECOND_HALF_FIXCOST' in table 'ESTIMATE_BUDGET' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_SECOND_HALF_VARIABLECOST' in table 'ESTIMATE_BUDGE"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFFERENCE_SECOND_HALF_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFFERENCE_SECOND_HALF_FIXCOST' in table 'ESTIMATE_BUDGET' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFFERENCE_SECOND_HALF_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFFERENCE_SECOND_HALF_VARIABLECOST' in table 'ESTIMATE_BUD"& _ 
                            "GET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_TOTAL_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_TOTAL_YEAR_FIXCOST' in table 'ESTIMATE_BUDGET' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTIMATE_TOTAL_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTIMATE_TOTAL_YEAR_VARIABLECOST' in table 'ESTIMATE_BUDGET"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NONull()
            Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NAMENull()
            Me(Me.tableESTIMATE_BUDGET.BUDGET_ORDER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPT_NONull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.DEPT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPT_NONull()
            Me(Me.tableESTIMATE_BUDGET.DEPT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NONull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NONull()
            Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NAMENull()
            Me(Me.tableESTIMATE_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALFNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALFNull()
            Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALFNull()
            Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7Null()
            Me(Me.tableESTIMATE_BUDGET.M7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M7_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M7_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM7_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M7_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM7_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M7_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8Null()
            Me(Me.tableESTIMATE_BUDGET.M8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M8_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M8_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM8_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M8_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM8_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M8_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9Null()
            Me(Me.tableESTIMATE_BUDGET.M9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M9_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M9_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM9_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M9_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM9_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M9_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10Null()
            Me(Me.tableESTIMATE_BUDGET.M10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M10_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M10_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM10_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M10_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM10_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M10_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11Null()
            Me(Me.tableESTIMATE_BUDGET.M11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M11_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M11_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM11_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M11_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM11_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M11_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12Null() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12Null()
            Me(Me.tableESTIMATE_BUDGET.M12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M12_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M12_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM12_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.M12_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM12_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.M12_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_SECOND_HALFNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFFERENCE_SECOND_HALFNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFFERENCE_SECOND_HALFNull()
            Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_TOTAL_YEARNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_TOTAL_YEARNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALF_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsACTUAL_FIRST_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetACTUAL_FIRST_HALF_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ACTUAL_FIRST_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.REVISE_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFFERENCE_SECOND_HALF_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFFERENCE_SECOND_HALF_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFFERENCE_SECOND_HALF_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFFERENCE_SECOND_HALF_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.DIFFERENCE_SECOND_HALF_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_TOTAL_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_TOTAL_YEAR_FIXCOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsESTIMATE_TOTAL_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetESTIMATE_TOTAL_YEAR_VARIABLECOSTNull()
            Me(Me.tableESTIMATE_BUDGET.ESTIMATE_TOTAL_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class BG_M_SETTINGSRow
        Inherits Global.System.Data.DataRow
        
        Private tableBG_M_SETTINGS As BG_M_SETTINGSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBG_M_SETTINGS = CType(Me.Table,BG_M_SETTINGSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUTH1_IMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableBG_M_SETTINGS.AUTH1_IMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTH1_IMAGE' in table 'BG_M_SETTINGS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBG_M_SETTINGS.AUTH1_IMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUTH2_IMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableBG_M_SETTINGS.AUTH2_IMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTH2_IMAGE' in table 'BG_M_SETTINGS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBG_M_SETTINGS.AUTH2_IMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAUTH1_IMAGENull() As Boolean
            Return Me.IsNull(Me.tableBG_M_SETTINGS.AUTH1_IMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAUTH1_IMAGENull()
            Me(Me.tableBG_M_SETTINGS.AUTH1_IMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAUTH2_IMAGENull() As Boolean
            Return Me.IsNull(Me.tableBG_M_SETTINGS.AUTH2_IMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAUTH2_IMAGENull()
            Me(Me.tableBG_M_SETTINGS.AUTH2_IMAGEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MTP_BUDGETRow
        Inherits Global.System.Data.DataRow
        
        Private tableMTP_BUDGET As MTP_BUDGETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMTP_BUDGET = CType(Me.Table,MTP_BUDGETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NO' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BUDGET_ORDER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUDGET_ORDER_NAME' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.DEPT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPT_NO' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.DEPT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NO' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERSON_IN_CHARGE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERSON_IN_CHARGE_NAME' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEARColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT1_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT2_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT2_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT2_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT2_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT2_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT2_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT3_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT3_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT3_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT3_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT3_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT3_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT4_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT4_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT4_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT4_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT4_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT4_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT5_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT5_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RRT5_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.RRT5_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RRT5_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.RRT5_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR_FIXCOST' in table 'MTP_BUDGET' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REVISE_TOTAL_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_TOTAL_YEAR_VARIABLECOST' in table 'MTP_BUDGET' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIFF_TOTAL_YEAR_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFF_TOTAL_YEAR_VARIABLECOST' in table 'MTP_BUDGET' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT1' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT2' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT3' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT4' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT5' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT1_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT1_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT1_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT1_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT1_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT1_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT1_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT1_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT2_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT2_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT2_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT2_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT2_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT2_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT2_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT2_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT3_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT3_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT3_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT3_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT3_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT3_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT3_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT3_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT4_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT4_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT4_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT4_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT4_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT4_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT4_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT4_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT5_FIXCOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT5_FIXCOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT5_FIXCOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT5_FIXCOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrevRRT5_VARIABLECOST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PrevRRT5_VARIABLECOSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevRRT5_VARIABLECOST' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PrevRRT5_VARIABLECOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PIC_SHOW_FLG() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableMTP_BUDGET.PIC_SHOW_FLGColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PIC_SHOW_FLG' in table 'MTP_BUDGET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP_BUDGET.PIC_SHOW_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NONull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.BUDGET_ORDER_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NONull()
            Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBUDGET_ORDER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.BUDGET_ORDER_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBUDGET_ORDER_NAMENull()
            Me(Me.tableMTP_BUDGET.BUDGET_ORDER_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPT_NONull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.DEPT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPT_NONull()
            Me(Me.tableMTP_BUDGET.DEPT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NONull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NONull()
            Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERSON_IN_CHARGE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERSON_IN_CHARGE_NAMENull()
            Me(Me.tableMTP_BUDGET.PERSON_IN_CHARGE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEARNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.REVISE_TOTAL_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEARNull()
            Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEARNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.DIFF_TOTAL_YEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEARNull()
            Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1Null()
            Me(Me.tableMTP_BUDGET.RRT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2Null()
            Me(Me.tableMTP_BUDGET.RRT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3Null()
            Me(Me.tableMTP_BUDGET.RRT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4Null()
            Me(Me.tableMTP_BUDGET.RRT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5Null()
            Me(Me.tableMTP_BUDGET.RRT5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.RRT1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT1_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.RRT1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT2_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.RRT2_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT2_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT2_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT2_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.RRT2_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT3_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.RRT3_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT3_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT3_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT3_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.RRT3_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT4_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.RRT4_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT4_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT4_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT4_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.RRT4_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT5_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.RRT5_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRRT5_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.RRT5_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRRT5_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.RRT5_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEAR_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREVISE_TOTAL_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREVISE_TOTAL_YEAR_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.REVISE_TOTAL_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEAR_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEAR_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIFF_TOTAL_YEAR_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIFF_TOTAL_YEAR_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.DIFF_TOTAL_YEAR_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT1Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT1Null()
            Me(Me.tableMTP_BUDGET.PrevRRT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT2Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT2Null()
            Me(Me.tableMTP_BUDGET.PrevRRT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT3Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT3Null()
            Me(Me.tableMTP_BUDGET.PrevRRT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT4Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT4Null()
            Me(Me.tableMTP_BUDGET.PrevRRT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT5Null() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT5Null()
            Me(Me.tableMTP_BUDGET.PrevRRT5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT1_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT1_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT1_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT1_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT1_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT1_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT1_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT1_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT2_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT2_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT2_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT2_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT2_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT2_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT2_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT2_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT3_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT3_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT3_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT3_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT3_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT3_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT3_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT3_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT4_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT4_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT4_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT4_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT4_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT4_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT4_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT4_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT5_FIXCOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT5_FIXCOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT5_FIXCOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT5_FIXCOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevRRT5_VARIABLECOSTNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PrevRRT5_VARIABLECOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevRRT5_VARIABLECOSTNull()
            Me(Me.tableMTP_BUDGET.PrevRRT5_VARIABLECOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPIC_SHOW_FLGNull() As Boolean
            Return Me.IsNull(Me.tableMTP_BUDGET.PIC_SHOW_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPIC_SHOW_FLGNull()
            Me(Me.tableMTP_BUDGET.PIC_SHOW_FLGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class BUDGET_DATARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BUDGET_DATARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As BUDGET_DATARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As BUDGET_DATARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REVISE_BUDGETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REVISE_BUDGETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REVISE_BUDGETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REVISE_BUDGETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ESTIMATE_BUDGETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ESTIMATE_BUDGETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ESTIMATE_BUDGETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ESTIMATE_BUDGETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class BG_M_SETTINGSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BG_M_SETTINGSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As BG_M_SETTINGSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As BG_M_SETTINGSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MTP_BUDGETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MTP_BUDGETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MTP_BUDGETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MTP_BUDGETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
